Terminals unused in grammar

   KW_LIMITER


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | decl_part main_func

    3 decl_part: %empty
    4          | decl_part KW_CONST decl_const ';'
    5          | decl_part KW_LET decl ';'
    6          | decl_part func_decl ';'
    7          | decl_part func_decl

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'

    9 defined_func: F_readS '(' ')'
   10             | F_readI '(' ')'
   11             | F_readR '(' ')'
   12             | F_writeS '(' expr ')'
   13             | F_writeI '(' expr ')'
   14             | F_writeR '(' expr ')'

   15 commands: func_call ';'
   16         | defined_func ';'
   17         | KW_LET decl ';'
   18         | IDENTIFIER ASSIGN expr ';'
   19         | return_expr ';'
   20         | KW_IF expr KW_THEN if_state KW_FI ';'
   21         | KW_WHILE expr KW_LOOP while_state KW_POOL ';'

   22 main_body: commands
   23          | commands main_body

   24 while_state: commands
   25            | commands while_state

   26 if_state: %empty
   27         | commands if_state
   28         | KW_ELSE_IF expr KW_THEN if_state
   29         | KW_ELSE if_state

   30 type: KW_INT
   31     | KW_REAL
   32     | KW_BOOL
   33     | KW_STRING
   34     | "[]" type

   35 const_type: KW_INT
   36           | KW_REAL
   37           | KW_BOOL
   38           | KW_STRING

   39 func_body: %empty
   40          | commands func_body

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'

   42 func_call: IDENTIFIER '(' func_param ')'

   43 func_param: %empty
   44           | expr ',' func_param
   45           | expr

   46 return_expr: KW_RETURN expr

   47 func_par_decl: %empty
   48              | IDENTIFIER
   49              | IDENTIFIER '[' ']'
   50              | IDENTIFIER '[' ']' ':' type func_par_decl
   51              | IDENTIFIER ':' type func_par_decl
   52              | IDENTIFIER ',' func_par_decl
   53              | IDENTIFIER '[' ']' ',' func_par_decl
   54              | IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | IDENTIFIER ':' type ',' func_par_decl

   56 data: POSINT
   57     | REAL
   58     | STRING
   59     | KW_TRUE
   60     | KW_FALSE
   61     | ARRAY

   62 decl_const: ',' decl_const
   63           | IDENTIFIER ASSIGN data decl_const
   64           | IDENTIFIER ARRAY ASSIGN data decl_const
   65           | ':' const_type

   66 decl: %empty
   67     | ',' decl
   68     | IDENTIFIER decl
   69     | IDENTIFIER ARRAY decl
   70     | IDENTIFIER ARRAY ASSIGN data decl
   71     | IDENTIFIER ASSIGN data decl
   72     | ':' type

   73 expr: POSINT
   74     | KW_TRUE
   75     | KW_FALSE
   76     | STRING
   77     | REAL
   78     | IDENTIFIER
   79     | IDENTIFIER ARRAY
   80     | defined_func
   81     | func_call
   82     | '(' expr ')'
   83     | '+' expr
   84     | '-' expr
   85     | KW_NOT expr
   86     | expr '+' expr
   87     | expr '-' expr
   88     | expr '*' expr
   89     | expr '/' expr
   90     | expr '%' expr
   91     | expr '=' expr
   92     | expr '<' expr
   93     | expr KW_NOT_EQL expr
   94     | expr KW_LESS_EQL expr
   95     | expr KW_OR expr
   96     | expr KW_AND expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 90
'(' (40) 8 9 10 11 12 13 14 41 42 82
')' (41) 8 9 10 11 12 13 14 41 42 82
'*' (42) 88
'+' (43) 83 86
',' (44) 44 52 53 54 55 62 67
'-' (45) 84 87
'/' (47) 89
':' (58) 8 41 50 51 54 55 65 72
';' (59) 4 5 6 15 16 17 18 19 20 21
'<' (60) 92
'=' (61) 91
'[' (91) 49 50 53 54
']' (93) 49 50 53 54
'{' (123) 8 41
'}' (125) 8 41
error (256)
IDENTIFIER (258) 18 41 42 48 49 50 51 52 53 54 55 63 64 68 69 70 71
    78 79
POSINT (259) 56 73
REAL (260) 57 77
STRING (261) 58 76
ARRAY (262) 61 64 69 70 79
ASSIGN (263) 8 18 41 63 64 70 71
KW_INT (264) 8 30 35
KW_REAL (265) 31 36
KW_BOOL (266) 32 37
KW_STRING (267) 33 38
KW_FUNC (268) 8 41
KW_IF (269) 20
KW_THEN (270) 20 28
KW_ELSE (271) 29
KW_ELSE_IF (272) 28
KW_AND (273) 96
KW_OR (274) 95
KW_NOT (275) 85
KW_NOT_EQL (276) 93
KW_LESS_EQL (277) 94
KW_FI (278) 20
KW_WHILE (279) 21
KW_LOOP (280) 21
KW_POOL (281) 21
KW_CONST (282) 4 8 41
KW_LET (283) 5 17
KW_RETURN (284) 46
KW_START (285) 8
KW_LIMITER (286)
KW_TRUE (287) 59 74
KW_FALSE (288) 60 75
F_readS (289) 9
F_readI (290) 10
F_readR (291) 11
F_writeS (292) 12
F_writeI (293) 13
F_writeR (294) 14
"[]" (295) 34


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
input (58)
    on left: 1 2, on right: 0
decl_part (59)
    on left: 3 4 5 6 7, on right: 2 4 5 6 7
main_func (60)
    on left: 8, on right: 2
defined_func (61)
    on left: 9 10 11 12 13 14, on right: 16 80
commands (62)
    on left: 15 16 17 18 19 20 21, on right: 22 23 24 25 27 40
main_body (63)
    on left: 22 23, on right: 8 23
while_state (64)
    on left: 24 25, on right: 21 25
if_state (65)
    on left: 26 27 28 29, on right: 20 27 28 29
type (66)
    on left: 30 31 32 33 34, on right: 34 41 50 51 54 55 72
const_type (67)
    on left: 35 36 37 38, on right: 65
func_body (68)
    on left: 39 40, on right: 40 41
func_decl (69)
    on left: 41, on right: 6 7
func_call (70)
    on left: 42, on right: 15 81
func_param (71)
    on left: 43 44 45, on right: 42 44
return_expr (72)
    on left: 46, on right: 19
func_par_decl (73)
    on left: 47 48 49 50 51 52 53 54 55, on right: 41 50 51 52 53 54
    55
data (74)
    on left: 56 57 58 59 60 61, on right: 63 64 70 71
decl_const (75)
    on left: 62 63 64 65, on right: 4 62 63 64
decl (76)
    on left: 66 67 68 69 70 71 72, on right: 5 17 67 68 69 70 71
expr (77)
    on left: 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
    91 92 93 94 95 96, on right: 12 13 14 18 20 21 28 44 45 46 82 83
    84 85 86 87 88 89 90 91 92 93 94 95 96


State 0

    0 $accept: . input $end
    1 input: . %empty  [$end]
    2      | . decl_part main_func
    3 decl_part: . %empty  [KW_CONST, KW_LET]
    4          | . decl_part KW_CONST decl_const ';'
    5          | . decl_part KW_LET decl ';'
    6          | . decl_part func_decl ';'
    7          | . decl_part func_decl

    $end      reduce using rule 1 (input)
    $default  reduce using rule 3 (decl_part)

    input      go to state 1
    decl_part  go to state 2


State 1

    0 $accept: input . $end

    $end  shift, and go to state 3


State 2

    2 input: decl_part . main_func
    4 decl_part: decl_part . KW_CONST decl_const ';'
    5          | decl_part . KW_LET decl ';'
    6          | decl_part . func_decl ';'
    7          | decl_part . func_decl
    8 main_func: . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'
   41 func_decl: . KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'

    KW_CONST  shift, and go to state 4
    KW_LET    shift, and go to state 5

    main_func  go to state 6
    func_decl  go to state 7


State 3

    0 $accept: input $end .

    $default  accept


State 4

    4 decl_part: decl_part KW_CONST . decl_const ';'
    8 main_func: KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'
   41 func_decl: KW_CONST . IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'
   62 decl_const: . ',' decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 8
    KW_START    shift, and go to state 9
    ':'         shift, and go to state 10
    ','         shift, and go to state 11

    decl_const  go to state 12


State 5

    5 decl_part: decl_part KW_LET . decl ';'
   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 13
    ':'         shift, and go to state 14
    ','         shift, and go to state 15

    $default  reduce using rule 66 (decl)

    decl  go to state 16


State 6

    2 input: decl_part main_func .

    $default  reduce using rule 2 (input)


State 7

    6 decl_part: decl_part func_decl . ';'
    7          | decl_part func_decl .  [KW_CONST, KW_LET]

    ';'  shift, and go to state 17

    $default  reduce using rule 7 (decl_part)


State 8

   41 func_decl: KW_CONST IDENTIFIER . ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'
   63 decl_const: IDENTIFIER . ASSIGN data decl_const
   64           | IDENTIFIER . ARRAY ASSIGN data decl_const

    ARRAY   shift, and go to state 18
    ASSIGN  shift, and go to state 19


State 9

    8 main_func: KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'

    ASSIGN  shift, and go to state 20


State 10

   35 const_type: . KW_INT
   36           | . KW_REAL
   37           | . KW_BOOL
   38           | . KW_STRING
   65 decl_const: ':' . const_type

    KW_INT     shift, and go to state 21
    KW_REAL    shift, and go to state 22
    KW_BOOL    shift, and go to state 23
    KW_STRING  shift, and go to state 24

    const_type  go to state 25


State 11

   62 decl_const: . ',' decl_const
   62           | ',' . decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 26
    ':'         shift, and go to state 10
    ','         shift, and go to state 11

    decl_const  go to state 27


State 12

    4 decl_part: decl_part KW_CONST decl_const . ';'

    ';'  shift, and go to state 28


State 13

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   68     | IDENTIFIER . decl
   69     | . IDENTIFIER ARRAY decl
   69     | IDENTIFIER . ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   70     | IDENTIFIER . ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   71     | IDENTIFIER . ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 13
    ARRAY       shift, and go to state 29
    ASSIGN      shift, and go to state 30
    ':'         shift, and go to state 14
    ','         shift, and go to state 15

    $default  reduce using rule 66 (decl)

    decl  go to state 31


State 14

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   72 decl: ':' . type

    KW_INT     shift, and go to state 32
    KW_REAL    shift, and go to state 33
    KW_BOOL    shift, and go to state 34
    KW_STRING  shift, and go to state 35
    "[]"       shift, and go to state 36

    type  go to state 37


State 15

   66 decl: . %empty  [';']
   67     | . ',' decl
   67     | ',' . decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 13
    ':'         shift, and go to state 14
    ','         shift, and go to state 15

    $default  reduce using rule 66 (decl)

    decl  go to state 38


State 16

    5 decl_part: decl_part KW_LET decl . ';'

    ';'  shift, and go to state 39


State 17

    6 decl_part: decl_part func_decl ';' .

    $default  reduce using rule 6 (decl_part)


State 18

   64 decl_const: IDENTIFIER ARRAY . ASSIGN data decl_const

    ASSIGN  shift, and go to state 40


State 19

   41 func_decl: KW_CONST IDENTIFIER ASSIGN . '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'
   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   63 decl_const: IDENTIFIER ASSIGN . data decl_const

    POSINT    shift, and go to state 41
    REAL      shift, and go to state 42
    STRING    shift, and go to state 43
    ARRAY     shift, and go to state 44
    KW_TRUE   shift, and go to state 45
    KW_FALSE  shift, and go to state 46
    '('       shift, and go to state 47

    data  go to state 48


State 20

    8 main_func: KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'

    '('  shift, and go to state 49


State 21

   35 const_type: KW_INT .

    $default  reduce using rule 35 (const_type)


State 22

   36 const_type: KW_REAL .

    $default  reduce using rule 36 (const_type)


State 23

   37 const_type: KW_BOOL .

    $default  reduce using rule 37 (const_type)


State 24

   38 const_type: KW_STRING .

    $default  reduce using rule 38 (const_type)


State 25

   65 decl_const: ':' const_type .

    $default  reduce using rule 65 (decl_const)


State 26

   63 decl_const: IDENTIFIER . ASSIGN data decl_const
   64           | IDENTIFIER . ARRAY ASSIGN data decl_const

    ARRAY   shift, and go to state 18
    ASSIGN  shift, and go to state 50


State 27

   62 decl_const: ',' decl_const .

    $default  reduce using rule 62 (decl_const)


State 28

    4 decl_part: decl_part KW_CONST decl_const ';' .

    $default  reduce using rule 4 (decl_part)


State 29

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   69     | IDENTIFIER ARRAY . decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   70     | IDENTIFIER ARRAY . ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 13
    ASSIGN      shift, and go to state 51
    ':'         shift, and go to state 14
    ','         shift, and go to state 15

    $default  reduce using rule 66 (decl)

    decl  go to state 52


State 30

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   71 decl: IDENTIFIER ASSIGN . data decl

    POSINT    shift, and go to state 41
    REAL      shift, and go to state 42
    STRING    shift, and go to state 43
    ARRAY     shift, and go to state 44
    KW_TRUE   shift, and go to state 45
    KW_FALSE  shift, and go to state 46

    data  go to state 53


State 31

   68 decl: IDENTIFIER decl .

    $default  reduce using rule 68 (decl)


State 32

   30 type: KW_INT .

    $default  reduce using rule 30 (type)


State 33

   31 type: KW_REAL .

    $default  reduce using rule 31 (type)


State 34

   32 type: KW_BOOL .

    $default  reduce using rule 32 (type)


State 35

   33 type: KW_STRING .

    $default  reduce using rule 33 (type)


State 36

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   34     | "[]" . type

    KW_INT     shift, and go to state 32
    KW_REAL    shift, and go to state 33
    KW_BOOL    shift, and go to state 34
    KW_STRING  shift, and go to state 35
    "[]"       shift, and go to state 36

    type  go to state 54


State 37

   72 decl: ':' type .

    $default  reduce using rule 72 (decl)


State 38

   67 decl: ',' decl .

    $default  reduce using rule 67 (decl)


State 39

    5 decl_part: decl_part KW_LET decl ';' .

    $default  reduce using rule 5 (decl_part)


State 40

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   64 decl_const: IDENTIFIER ARRAY ASSIGN . data decl_const

    POSINT    shift, and go to state 41
    REAL      shift, and go to state 42
    STRING    shift, and go to state 43
    ARRAY     shift, and go to state 44
    KW_TRUE   shift, and go to state 45
    KW_FALSE  shift, and go to state 46

    data  go to state 55


State 41

   56 data: POSINT .

    $default  reduce using rule 56 (data)


State 42

   57 data: REAL .

    $default  reduce using rule 57 (data)


State 43

   58 data: STRING .

    $default  reduce using rule 58 (data)


State 44

   61 data: ARRAY .

    $default  reduce using rule 61 (data)


State 45

   59 data: KW_TRUE .

    $default  reduce using rule 59 (data)


State 46

   60 data: KW_FALSE .

    $default  reduce using rule 60 (data)


State 47

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' . func_par_decl ')' ':' type KW_FUNC '{' func_body '}'
   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 56

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 57


State 48

   62 decl_const: . ',' decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   63           | IDENTIFIER ASSIGN data . decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 26
    ':'         shift, and go to state 10
    ','         shift, and go to state 11

    decl_const  go to state 58


State 49

    8 main_func: KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT KW_FUNC '{' main_body '}'

    ')'  shift, and go to state 59


State 50

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   63 decl_const: IDENTIFIER ASSIGN . data decl_const

    POSINT    shift, and go to state 41
    REAL      shift, and go to state 42
    STRING    shift, and go to state 43
    ARRAY     shift, and go to state 44
    KW_TRUE   shift, and go to state 45
    KW_FALSE  shift, and go to state 46

    data  go to state 48


State 51

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   70 decl: IDENTIFIER ARRAY ASSIGN . data decl

    POSINT    shift, and go to state 41
    REAL      shift, and go to state 42
    STRING    shift, and go to state 43
    ARRAY     shift, and go to state 44
    KW_TRUE   shift, and go to state 45
    KW_FALSE  shift, and go to state 46

    data  go to state 60


State 52

   69 decl: IDENTIFIER ARRAY decl .

    $default  reduce using rule 69 (decl)


State 53

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   71     | IDENTIFIER ASSIGN data . decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 13
    ':'         shift, and go to state 14
    ','         shift, and go to state 15

    $default  reduce using rule 66 (decl)

    decl  go to state 61


State 54

   34 type: "[]" type .

    $default  reduce using rule 34 (type)


State 55

   62 decl_const: . ',' decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   64           | IDENTIFIER ARRAY ASSIGN data . decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 26
    ':'         shift, and go to state 10
    ','         shift, and go to state 11

    decl_const  go to state 62


State 56

   48 func_par_decl: IDENTIFIER .  [')']
   49              | IDENTIFIER . '[' ']'
   50              | IDENTIFIER . '[' ']' ':' type func_par_decl
   51              | IDENTIFIER . ':' type func_par_decl
   52              | IDENTIFIER . ',' func_par_decl
   53              | IDENTIFIER . '[' ']' ',' func_par_decl
   54              | IDENTIFIER . '[' ']' ':' type ',' func_par_decl
   55              | IDENTIFIER . ':' type ',' func_par_decl

    ':'  shift, and go to state 63
    ','  shift, and go to state 64
    '['  shift, and go to state 65

    $default  reduce using rule 48 (func_par_decl)


State 57

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl . ')' ':' type KW_FUNC '{' func_body '}'

    ')'  shift, and go to state 66


State 58

   63 decl_const: IDENTIFIER ASSIGN data decl_const .

    $default  reduce using rule 63 (decl_const)


State 59

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT KW_FUNC '{' main_body '}'

    ':'  shift, and go to state 67


State 60

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   70     | IDENTIFIER ARRAY ASSIGN data . decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 13
    ':'         shift, and go to state 14
    ','         shift, and go to state 15

    $default  reduce using rule 66 (decl)

    decl  go to state 68


State 61

   71 decl: IDENTIFIER ASSIGN data decl .

    $default  reduce using rule 71 (decl)


State 62

   64 decl_const: IDENTIFIER ARRAY ASSIGN data decl_const .

    $default  reduce using rule 64 (decl_const)


State 63

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   51 func_par_decl: IDENTIFIER ':' . type func_par_decl
   55              | IDENTIFIER ':' . type ',' func_par_decl

    KW_INT     shift, and go to state 32
    KW_REAL    shift, and go to state 33
    KW_BOOL    shift, and go to state 34
    KW_STRING  shift, and go to state 35
    "[]"       shift, and go to state 36

    type  go to state 69


State 64

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   52              | IDENTIFIER ',' . func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 56

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 70


State 65

   49 func_par_decl: IDENTIFIER '[' . ']'
   50              | IDENTIFIER '[' . ']' ':' type func_par_decl
   53              | IDENTIFIER '[' . ']' ',' func_par_decl
   54              | IDENTIFIER '[' . ']' ':' type ',' func_par_decl

    ']'  shift, and go to state 71


State 66

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' . ':' type KW_FUNC '{' func_body '}'

    ':'  shift, and go to state 72


State 67

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT KW_FUNC '{' main_body '}'

    KW_INT  shift, and go to state 73


State 68

   70 decl: IDENTIFIER ARRAY ASSIGN data decl .

    $default  reduce using rule 70 (decl)


State 69

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   51              | IDENTIFIER ':' type . func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl
   55              | IDENTIFIER ':' type . ',' func_par_decl

    IDENTIFIER  shift, and go to state 56
    ','         shift, and go to state 74

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 75


State 70

   52 func_par_decl: IDENTIFIER ',' func_par_decl .

    $default  reduce using rule 52 (func_par_decl)


State 71

   49 func_par_decl: IDENTIFIER '[' ']' .  [')']
   50              | IDENTIFIER '[' ']' . ':' type func_par_decl
   53              | IDENTIFIER '[' ']' . ',' func_par_decl
   54              | IDENTIFIER '[' ']' . ':' type ',' func_par_decl

    ':'  shift, and go to state 76
    ','  shift, and go to state 77

    $default  reduce using rule 49 (func_par_decl)


State 72

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' . type KW_FUNC '{' func_body '}'

    KW_INT     shift, and go to state 32
    KW_REAL    shift, and go to state 33
    KW_BOOL    shift, and go to state 34
    KW_STRING  shift, and go to state 35
    "[]"       shift, and go to state 36

    type  go to state 78


State 73

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . KW_FUNC '{' main_body '}'

    KW_FUNC  shift, and go to state 79


State 74

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl
   55              | IDENTIFIER ':' type ',' . func_par_decl

    IDENTIFIER  shift, and go to state 56

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 80


State 75

   51 func_par_decl: IDENTIFIER ':' type func_par_decl .

    $default  reduce using rule 51 (func_par_decl)


State 76

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   50 func_par_decl: IDENTIFIER '[' ']' ':' . type func_par_decl
   54              | IDENTIFIER '[' ']' ':' . type ',' func_par_decl

    KW_INT     shift, and go to state 32
    KW_REAL    shift, and go to state 33
    KW_BOOL    shift, and go to state 34
    KW_STRING  shift, and go to state 35
    "[]"       shift, and go to state 36

    type  go to state 81


State 77

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   53              | IDENTIFIER '[' ']' ',' . func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 56

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 82


State 78

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type . KW_FUNC '{' func_body '}'

    KW_FUNC  shift, and go to state 83


State 79

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC . '{' main_body '}'

    '{'  shift, and go to state 84


State 80

   55 func_par_decl: IDENTIFIER ':' type ',' func_par_decl .

    $default  reduce using rule 55 (func_par_decl)


State 81

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   50              | IDENTIFIER '[' ']' ':' type . func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   54              | IDENTIFIER '[' ']' ':' type . ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 56
    ','         shift, and go to state 85

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 86


State 82

   53 func_par_decl: IDENTIFIER '[' ']' ',' func_par_decl .

    $default  reduce using rule 53 (func_par_decl)


State 83

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC . '{' func_body '}'

    '{'  shift, and go to state 87


State 84

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' . main_body '}'
    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   22 main_body: . commands
   23          | . commands main_body
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    defined_func  go to state 99
    commands      go to state 100
    main_body     go to state 101
    func_call     go to state 102
    return_expr   go to state 103


State 85

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   54              | IDENTIFIER '[' ']' ':' type ',' . func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 56

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 104


State 86

   50 func_par_decl: IDENTIFIER '[' ']' ':' type func_par_decl .

    $default  reduce using rule 50 (func_par_decl)


State 87

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   39 func_body: . %empty  ['}']
   40          | . commands func_body
   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' . func_body '}'
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    $default  reduce using rule 39 (func_body)

    defined_func  go to state 99
    commands      go to state 105
    func_body     go to state 106
    func_call     go to state 102
    return_expr   go to state 103


State 88

   18 commands: IDENTIFIER . ASSIGN expr ';'
   42 func_call: IDENTIFIER . '(' func_param ')'

    ASSIGN  shift, and go to state 107
    '('     shift, and go to state 108


State 89

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   20 commands: KW_IF . expr KW_THEN if_state KW_FI ';'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 121


State 90

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   21 commands: KW_WHILE . expr KW_LOOP while_state KW_POOL ';'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 122


State 91

   17 commands: KW_LET . decl ';'
   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 13
    ':'         shift, and go to state 14
    ','         shift, and go to state 15

    $default  reduce using rule 66 (decl)

    decl  go to state 123


State 92

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: KW_RETURN . expr
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 124


State 93

    9 defined_func: F_readS . '(' ')'

    '('  shift, and go to state 125


State 94

   10 defined_func: F_readI . '(' ')'

    '('  shift, and go to state 126


State 95

   11 defined_func: F_readR . '(' ')'

    '('  shift, and go to state 127


State 96

   12 defined_func: F_writeS . '(' expr ')'

    '('  shift, and go to state 128


State 97

   13 defined_func: F_writeI . '(' expr ')'

    '('  shift, and go to state 129


State 98

   14 defined_func: F_writeR . '(' expr ')'

    '('  shift, and go to state 130


State 99

   16 commands: defined_func . ';'

    ';'  shift, and go to state 131


State 100

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   22 main_body: . commands
   22          | commands .  ['}']
   23          | . commands main_body
   23          | commands . main_body
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    $default  reduce using rule 22 (main_body)

    defined_func  go to state 99
    commands      go to state 100
    main_body     go to state 132
    func_call     go to state 102
    return_expr   go to state 103


State 101

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body . '}'

    '}'  shift, and go to state 133


State 102

   15 commands: func_call . ';'

    ';'  shift, and go to state 134


State 103

   19 commands: return_expr . ';'

    ';'  shift, and go to state 135


State 104

   54 func_par_decl: IDENTIFIER '[' ']' ':' type ',' func_par_decl .

    $default  reduce using rule 54 (func_par_decl)


State 105

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   39 func_body: . %empty  ['}']
   40          | . commands func_body
   40          | commands . func_body
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    $default  reduce using rule 39 (func_body)

    defined_func  go to state 99
    commands      go to state 105
    func_body     go to state 136
    func_call     go to state 102
    return_expr   go to state 103


State 106

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body . '}'

    '}'  shift, and go to state 137


State 107

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   18 commands: IDENTIFIER ASSIGN . expr ';'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 138


State 108

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   42          | IDENTIFIER '(' . func_param ')'
   43 func_param: . %empty  [')']
   44           | . expr ',' func_param
   45           | . expr
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    $default  reduce using rule 43 (func_param)

    defined_func  go to state 119
    func_call     go to state 120
    func_param    go to state 139
    expr          go to state 140


State 109

   42 func_call: IDENTIFIER . '(' func_param ')'
   78 expr: IDENTIFIER .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   79     | IDENTIFIER . ARRAY

    ARRAY  shift, and go to state 141
    '('    shift, and go to state 108

    $default  reduce using rule 78 (expr)


State 110

   73 expr: POSINT .

    $default  reduce using rule 73 (expr)


State 111

   77 expr: REAL .

    $default  reduce using rule 77 (expr)


State 112

   76 expr: STRING .

    $default  reduce using rule 76 (expr)


State 113

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   85     | KW_NOT . expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 142


State 114

   74 expr: KW_TRUE .

    $default  reduce using rule 74 (expr)


State 115

   75 expr: KW_FALSE .

    $default  reduce using rule 75 (expr)


State 116

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   84     | '-' . expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 143


State 117

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   83     | '+' . expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 144


State 118

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   82     | '(' . expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 145


State 119

   80 expr: defined_func .

    $default  reduce using rule 80 (expr)


State 120

   81 expr: func_call .

    $default  reduce using rule 81 (expr)


State 121

   20 commands: KW_IF expr . KW_THEN if_state KW_FI ';'
   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_THEN      shift, and go to state 146
    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157


State 122

   21 commands: KW_WHILE expr . KW_LOOP while_state KW_POOL ';'
   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    KW_LOOP      shift, and go to state 158
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157


State 123

   17 commands: KW_LET decl . ';'

    ';'  shift, and go to state 159


State 124

   46 return_expr: KW_RETURN expr .  [';']
   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157

    $default  reduce using rule 46 (return_expr)


State 125

    9 defined_func: F_readS '(' . ')'

    ')'  shift, and go to state 160


State 126

   10 defined_func: F_readI '(' . ')'

    ')'  shift, and go to state 161


State 127

   11 defined_func: F_readR '(' . ')'

    ')'  shift, and go to state 162


State 128

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   12             | F_writeS '(' . expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 163


State 129

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   13             | F_writeI '(' . expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 164


State 130

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   14             | F_writeR '(' . expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 165


State 131

   16 commands: defined_func ';' .

    $default  reduce using rule 16 (commands)


State 132

   23 main_body: commands main_body .

    $default  reduce using rule 23 (main_body)


State 133

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}' .

    $default  reduce using rule 8 (main_func)


State 134

   15 commands: func_call ';' .

    $default  reduce using rule 15 (commands)


State 135

   19 commands: return_expr ';' .

    $default  reduce using rule 19 (commands)


State 136

   40 func_body: commands func_body .

    $default  reduce using rule 40 (func_body)


State 137

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}' .

    $default  reduce using rule 41 (func_decl)


State 138

   18 commands: IDENTIFIER ASSIGN expr . ';'
   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157
    ';'          shift, and go to state 166


State 139

   42 func_call: IDENTIFIER '(' func_param . ')'

    ')'  shift, and go to state 167


State 140

   44 func_param: expr . ',' func_param
   45           | expr .  [')']
   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157
    ','          shift, and go to state 168

    $default  reduce using rule 45 (func_param)


State 141

   79 expr: IDENTIFIER ARRAY .

    $default  reduce using rule 79 (expr)


State 142

   85 expr: KW_NOT expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   86     | expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    $default  reduce using rule 85 (expr)

    Conflict between rule 85 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 85 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 85 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < KW_NOT).
    Conflict between rule 85 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < KW_NOT).
    Conflict between rule 85 and token '=' resolved as reduce ('=' < KW_NOT).
    Conflict between rule 85 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 85 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 85 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 85 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 85 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 85 and token '%' resolved as reduce ('%' < KW_NOT).


State 143

   84 expr: '-' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   86     | expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 84 (expr)

    Conflict between rule 84 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 84 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 84 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '-').
    Conflict between rule 84 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '-').
    Conflict between rule 84 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 84 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 84 and token '-' resolved as reduce (%left '-').
    Conflict between rule 84 and token '+' resolved as reduce (%left '+').
    Conflict between rule 84 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 84 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 84 and token '%' resolved as shift ('-' < '%').


State 144

   83 expr: '+' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   86     | expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 83 (expr)

    Conflict between rule 83 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 83 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 83 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '+').
    Conflict between rule 83 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '+').
    Conflict between rule 83 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 83 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 83 and token '-' resolved as reduce (%left '-').
    Conflict between rule 83 and token '+' resolved as reduce (%left '+').
    Conflict between rule 83 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 83 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 83 and token '%' resolved as shift ('+' < '%').


State 145

   82 expr: '(' expr . ')'
   86     | expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157
    ')'          shift, and go to state 169


State 146

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   20         | KW_IF expr KW_THEN . if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   26 if_state: . %empty  [KW_FI]
   27         | . commands if_state
   28         | . KW_ELSE_IF expr KW_THEN if_state
   29         | . KW_ELSE if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_ELSE     shift, and go to state 170
    KW_ELSE_IF  shift, and go to state 171
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    $default  reduce using rule 26 (if_state)

    defined_func  go to state 99
    commands      go to state 172
    if_state      go to state 173
    func_call     go to state 102
    return_expr   go to state 103


State 147

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr
   96     | expr KW_AND . expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 174


State 148

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   95     | expr KW_OR . expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 175


State 149

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   93     | expr KW_NOT_EQL . expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 176


State 150

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   94     | expr KW_LESS_EQL . expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 177


State 151

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   91     | expr '=' . expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 178


State 152

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   92     | expr '<' . expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 179


State 153

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   87     | expr '-' . expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 180


State 154

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   86     | expr '+' . expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 181


State 155

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   88     | expr '*' . expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 182


State 156

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   89     | expr '/' . expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 183


State 157

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   90     | expr '%' . expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 184


State 158

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   21         | KW_WHILE expr KW_LOOP . while_state KW_POOL ';'
   24 while_state: . commands
   25            | . commands while_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    defined_func  go to state 99
    commands      go to state 185
    while_state   go to state 186
    func_call     go to state 102
    return_expr   go to state 103


State 159

   17 commands: KW_LET decl ';' .

    $default  reduce using rule 17 (commands)


State 160

    9 defined_func: F_readS '(' ')' .

    $default  reduce using rule 9 (defined_func)


State 161

   10 defined_func: F_readI '(' ')' .

    $default  reduce using rule 10 (defined_func)


State 162

   11 defined_func: F_readR '(' ')' .

    $default  reduce using rule 11 (defined_func)


State 163

   12 defined_func: F_writeS '(' expr . ')'
   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157
    ')'          shift, and go to state 187


State 164

   13 defined_func: F_writeI '(' expr . ')'
   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157
    ')'          shift, and go to state 188


State 165

   14 defined_func: F_writeR '(' expr . ')'
   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157
    ')'          shift, and go to state 189


State 166

   18 commands: IDENTIFIER ASSIGN expr ';' .

    $default  reduce using rule 18 (commands)


State 167

   42 func_call: IDENTIFIER '(' func_param ')' .

    $default  reduce using rule 42 (func_call)


State 168

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   42 func_call: . IDENTIFIER '(' func_param ')'
   43 func_param: . %empty  [')']
   44           | . expr ',' func_param
   44           | expr ',' . func_param
   45           | . expr
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    $default  reduce using rule 43 (func_param)

    defined_func  go to state 119
    func_call     go to state 120
    func_param    go to state 190
    expr          go to state 140


State 169

   82 expr: '(' expr ')' .

    $default  reduce using rule 82 (expr)


State 170

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   26 if_state: . %empty  [KW_FI]
   27         | . commands if_state
   28         | . KW_ELSE_IF expr KW_THEN if_state
   29         | . KW_ELSE if_state
   29         | KW_ELSE . if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_ELSE     shift, and go to state 170
    KW_ELSE_IF  shift, and go to state 171
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    $default  reduce using rule 26 (if_state)

    defined_func  go to state 99
    commands      go to state 172
    if_state      go to state 191
    func_call     go to state 102
    return_expr   go to state 103


State 171

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   28 if_state: KW_ELSE_IF . expr KW_THEN if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . STRING
   77     | . REAL
   78     | . IDENTIFIER
   79     | . IDENTIFIER ARRAY
   80     | . defined_func
   81     | . func_call
   82     | . '(' expr ')'
   83     | . '+' expr
   84     | . '-' expr
   85     | . KW_NOT expr
   86     | . expr '+' expr
   87     | . expr '-' expr
   88     | . expr '*' expr
   89     | . expr '/' expr
   90     | . expr '%' expr
   91     | . expr '=' expr
   92     | . expr '<' expr
   93     | . expr KW_NOT_EQL expr
   94     | . expr KW_LESS_EQL expr
   95     | . expr KW_OR expr
   96     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 109
    POSINT      shift, and go to state 110
    REAL        shift, and go to state 111
    STRING      shift, and go to state 112
    KW_NOT      shift, and go to state 113
    KW_TRUE     shift, and go to state 114
    KW_FALSE    shift, and go to state 115
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98
    '-'         shift, and go to state 116
    '+'         shift, and go to state 117
    '('         shift, and go to state 118

    defined_func  go to state 119
    func_call     go to state 120
    expr          go to state 192


State 172

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   26 if_state: . %empty  [KW_FI]
   27         | . commands if_state
   27         | commands . if_state
   28         | . KW_ELSE_IF expr KW_THEN if_state
   29         | . KW_ELSE if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_ELSE     shift, and go to state 170
    KW_ELSE_IF  shift, and go to state 171
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    $default  reduce using rule 26 (if_state)

    defined_func  go to state 99
    commands      go to state 172
    if_state      go to state 193
    func_call     go to state 102
    return_expr   go to state 103


State 173

   20 commands: KW_IF expr KW_THEN if_state . KW_FI ';'

    KW_FI  shift, and go to state 194


State 174

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr
   96     | expr KW_AND expr .  [KW_THEN, KW_AND, KW_OR, KW_LOOP, ';', ')', ',']

    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157

    $default  reduce using rule 96 (expr)

    Conflict between rule 96 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 96 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 96 and token KW_NOT_EQL resolved as shift (KW_AND < KW_NOT_EQL).
    Conflict between rule 96 and token KW_LESS_EQL resolved as shift (KW_AND < KW_LESS_EQL).
    Conflict between rule 96 and token '=' resolved as shift (KW_AND < '=').
    Conflict between rule 96 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 96 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 96 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 96 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 96 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 96 and token '%' resolved as shift (KW_AND < '%').


State 175

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   95     | expr KW_OR expr .  [KW_THEN, KW_OR, KW_LOOP, ';', ')', ',']
   96     | expr . KW_AND expr

    KW_AND       shift, and go to state 147
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157

    $default  reduce using rule 95 (expr)

    Conflict between rule 95 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 95 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 95 and token KW_NOT_EQL resolved as shift (KW_OR < KW_NOT_EQL).
    Conflict between rule 95 and token KW_LESS_EQL resolved as shift (KW_OR < KW_LESS_EQL).
    Conflict between rule 95 and token '=' resolved as shift (KW_OR < '=').
    Conflict between rule 95 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 95 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 95 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 95 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 95 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 95 and token '%' resolved as shift (KW_OR < '%').


State 176

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   93     | expr KW_NOT_EQL expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    '-'  shift, and go to state 153
    '+'  shift, and go to state 154
    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 93 (expr)

    Conflict between rule 93 and token KW_AND resolved as reduce (KW_AND < KW_NOT_EQL).
    Conflict between rule 93 and token KW_OR resolved as reduce (KW_OR < KW_NOT_EQL).
    Conflict between rule 93 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 93 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 93 and token '=' resolved as reduce (%left '=').
    Conflict between rule 93 and token '<' resolved as reduce (%left '<').
    Conflict between rule 93 and token '-' resolved as shift (KW_NOT_EQL < '-').
    Conflict between rule 93 and token '+' resolved as shift (KW_NOT_EQL < '+').
    Conflict between rule 93 and token '*' resolved as shift (KW_NOT_EQL < '*').
    Conflict between rule 93 and token '/' resolved as shift (KW_NOT_EQL < '/').
    Conflict between rule 93 and token '%' resolved as shift (KW_NOT_EQL < '%').


State 177

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   94     | expr KW_LESS_EQL expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    '-'  shift, and go to state 153
    '+'  shift, and go to state 154
    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 94 (expr)

    Conflict between rule 94 and token KW_AND resolved as reduce (KW_AND < KW_LESS_EQL).
    Conflict between rule 94 and token KW_OR resolved as reduce (KW_OR < KW_LESS_EQL).
    Conflict between rule 94 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 94 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 94 and token '=' resolved as reduce (%left '=').
    Conflict between rule 94 and token '<' resolved as reduce (%left '<').
    Conflict between rule 94 and token '-' resolved as shift (KW_LESS_EQL < '-').
    Conflict between rule 94 and token '+' resolved as shift (KW_LESS_EQL < '+').
    Conflict between rule 94 and token '*' resolved as shift (KW_LESS_EQL < '*').
    Conflict between rule 94 and token '/' resolved as shift (KW_LESS_EQL < '/').
    Conflict between rule 94 and token '%' resolved as shift (KW_LESS_EQL < '%').


State 178

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   91     | expr '=' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    '-'  shift, and go to state 153
    '+'  shift, and go to state 154
    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 91 (expr)

    Conflict between rule 91 and token KW_AND resolved as reduce (KW_AND < '=').
    Conflict between rule 91 and token KW_OR resolved as reduce (KW_OR < '=').
    Conflict between rule 91 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 91 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 91 and token '=' resolved as reduce (%left '=').
    Conflict between rule 91 and token '<' resolved as reduce (%left '<').
    Conflict between rule 91 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 91 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 91 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 91 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 91 and token '%' resolved as shift ('=' < '%').


State 179

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   92     | expr '<' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    '-'  shift, and go to state 153
    '+'  shift, and go to state 154
    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 92 (expr)

    Conflict between rule 92 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 92 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 92 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 92 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 92 and token '=' resolved as reduce (%left '=').
    Conflict between rule 92 and token '<' resolved as reduce (%left '<').
    Conflict between rule 92 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 92 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 92 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 92 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 92 and token '%' resolved as shift ('<' < '%').


State 180

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   87     | expr '-' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 87 (expr)

    Conflict between rule 87 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 87 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 87 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '-').
    Conflict between rule 87 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '-').
    Conflict between rule 87 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 87 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 87 and token '-' resolved as reduce (%left '-').
    Conflict between rule 87 and token '+' resolved as reduce (%left '+').
    Conflict between rule 87 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 87 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 87 and token '%' resolved as shift ('-' < '%').


State 181

   86 expr: expr . '+' expr
   86     | expr '+' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 86 (expr)

    Conflict between rule 86 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 86 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 86 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '+').
    Conflict between rule 86 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '+').
    Conflict between rule 86 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 86 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 86 and token '-' resolved as reduce (%left '-').
    Conflict between rule 86 and token '+' resolved as reduce (%left '+').
    Conflict between rule 86 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 86 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 86 and token '%' resolved as shift ('+' < '%').


State 182

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   88     | expr '*' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    $default  reduce using rule 88 (expr)

    Conflict between rule 88 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 88 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 88 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '*').
    Conflict between rule 88 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '*').
    Conflict between rule 88 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 88 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 88 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 88 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 88 and token '*' resolved as reduce (%left '*').
    Conflict between rule 88 and token '/' resolved as reduce (%left '/').
    Conflict between rule 88 and token '%' resolved as reduce (%left '%').


State 183

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   89     | expr '/' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    $default  reduce using rule 89 (expr)

    Conflict between rule 89 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 89 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 89 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '/').
    Conflict between rule 89 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '/').
    Conflict between rule 89 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 89 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 89 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 89 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 89 and token '*' resolved as reduce (%left '*').
    Conflict between rule 89 and token '/' resolved as reduce (%left '/').
    Conflict between rule 89 and token '%' resolved as reduce (%left '%').


State 184

   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   90     | expr '%' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    $default  reduce using rule 90 (expr)

    Conflict between rule 90 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 90 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 90 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '%').
    Conflict between rule 90 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '%').
    Conflict between rule 90 and token '=' resolved as reduce ('=' < '%').
    Conflict between rule 90 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 90 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 90 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 90 and token '*' resolved as reduce (%left '*').
    Conflict between rule 90 and token '/' resolved as reduce (%left '/').
    Conflict between rule 90 and token '%' resolved as reduce (%left '%').


State 185

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   24 while_state: . commands
   24            | commands .  [KW_POOL]
   25            | . commands while_state
   25            | commands . while_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    $default  reduce using rule 24 (while_state)

    defined_func  go to state 99
    commands      go to state 185
    while_state   go to state 195
    func_call     go to state 102
    return_expr   go to state 103


State 186

   21 commands: KW_WHILE expr KW_LOOP while_state . KW_POOL ';'

    KW_POOL  shift, and go to state 196


State 187

   12 defined_func: F_writeS '(' expr ')' .

    $default  reduce using rule 12 (defined_func)


State 188

   13 defined_func: F_writeI '(' expr ')' .

    $default  reduce using rule 13 (defined_func)


State 189

   14 defined_func: F_writeR '(' expr ')' .

    $default  reduce using rule 14 (defined_func)


State 190

   44 func_param: expr ',' func_param .

    $default  reduce using rule 44 (func_param)


State 191

   29 if_state: KW_ELSE if_state .

    $default  reduce using rule 29 (if_state)


State 192

   28 if_state: KW_ELSE_IF expr . KW_THEN if_state
   86 expr: expr . '+' expr
   87     | expr . '-' expr
   88     | expr . '*' expr
   89     | expr . '/' expr
   90     | expr . '%' expr
   91     | expr . '=' expr
   92     | expr . '<' expr
   93     | expr . KW_NOT_EQL expr
   94     | expr . KW_LESS_EQL expr
   95     | expr . KW_OR expr
   96     | expr . KW_AND expr

    KW_THEN      shift, and go to state 197
    KW_AND       shift, and go to state 147
    KW_OR        shift, and go to state 148
    KW_NOT_EQL   shift, and go to state 149
    KW_LESS_EQL  shift, and go to state 150
    '='          shift, and go to state 151
    '<'          shift, and go to state 152
    '-'          shift, and go to state 153
    '+'          shift, and go to state 154
    '*'          shift, and go to state 155
    '/'          shift, and go to state 156
    '%'          shift, and go to state 157


State 193

   27 if_state: commands if_state .

    $default  reduce using rule 27 (if_state)


State 194

   20 commands: KW_IF expr KW_THEN if_state KW_FI . ';'

    ';'  shift, and go to state 198


State 195

   25 while_state: commands while_state .

    $default  reduce using rule 25 (while_state)


State 196

   21 commands: KW_WHILE expr KW_LOOP while_state KW_POOL . ';'

    ';'  shift, and go to state 199


State 197

    9 defined_func: . F_readS '(' ')'
   10             | . F_readI '(' ')'
   11             | . F_readR '(' ')'
   12             | . F_writeS '(' expr ')'
   13             | . F_writeI '(' expr ')'
   14             | . F_writeR '(' expr ')'
   15 commands: . func_call ';'
   16         | . defined_func ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF expr KW_THEN if_state KW_FI ';'
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL ';'
   26 if_state: . %empty  [KW_FI]
   27         | . commands if_state
   28         | . KW_ELSE_IF expr KW_THEN if_state
   28         | KW_ELSE_IF expr KW_THEN . if_state
   29         | . KW_ELSE if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 88
    KW_IF       shift, and go to state 89
    KW_ELSE     shift, and go to state 170
    KW_ELSE_IF  shift, and go to state 171
    KW_WHILE    shift, and go to state 90
    KW_LET      shift, and go to state 91
    KW_RETURN   shift, and go to state 92
    F_readS     shift, and go to state 93
    F_readI     shift, and go to state 94
    F_readR     shift, and go to state 95
    F_writeS    shift, and go to state 96
    F_writeI    shift, and go to state 97
    F_writeR    shift, and go to state 98

    $default  reduce using rule 26 (if_state)

    defined_func  go to state 99
    commands      go to state 172
    if_state      go to state 200
    func_call     go to state 102
    return_expr   go to state 103


State 198

   20 commands: KW_IF expr KW_THEN if_state KW_FI ';' .

    $default  reduce using rule 20 (commands)


State 199

   21 commands: KW_WHILE expr KW_LOOP while_state KW_POOL ';' .

    $default  reduce using rule 21 (commands)


State 200

   28 if_state: KW_ELSE_IF expr KW_THEN if_state .

    $default  reduce using rule 28 (if_state)
