Terminals unused in grammar

   KW_LIMITER


Rules useless in parser due to conflicts

    6 part2: %empty


State 2 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | part1 part2 main_func

    3 part1: %empty
    4      | part1 KW_CONST decl_const ';'
    5      | part1 KW_LET decl ';'

    6 part2: %empty
    7      | part2 func_decl

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'

    9 defined_func: F_readS '(' ')' ';'
   10             | F_readI '(' ')' ';'
   11             | F_readR '(' ')' ';'
   12             | F_writeS '(' IDENTIFIER ')' ';'
   13             | F_writeI '(' IDENTIFIER ')' ';'
   14             | F_writeR '(' IDENTIFIER ')' ';'

   15 commands: func_call ';'
   16         | defined_func
   17         | KW_LET decl ';'
   18         | IDENTIFIER ASSIGN expr ';'
   19         | return_expr ';'
   20         | KW_IF if_state KW_FI
   21         | KW_WHILE expr KW_LOOP while_state KW_POOL

   22 main_body: commands
   23          | commands main_body

   24 while_state: commands
   25            | commands while_state

   26 if_state: %empty
   27         | expr KW_THEN if_state
   28         | commands if_state
   29         | KW_ELSE if_state

   30 type: KW_INT
   31     | KW_REAL
   32     | KW_BOOL
   33     | KW_STRING
   34     | "[]" type

   35 const_type: KW_INT
   36           | KW_REAL
   37           | KW_BOOL
   38           | KW_STRING

   39 func_body: %empty
   40          | commands func_body

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'

   42 func_call: IDENTIFIER '(' func_param ')'

   43 func_param: %empty
   44           | expr ',' func_param
   45           | expr

   46 return_expr: KW_RETURN expr

   47 func_par_decl: %empty
   48              | IDENTIFIER
   49              | IDENTIFIER '[' ']'
   50              | IDENTIFIER '[' ']' ':' type func_par_decl
   51              | IDENTIFIER ':' type func_par_decl
   52              | IDENTIFIER ',' func_par_decl
   53              | IDENTIFIER '[' ']' ',' func_par_decl
   54              | IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | IDENTIFIER ':' type ',' func_par_decl

   56 data: POSINT
   57     | REAL
   58     | STRING
   59     | KW_TRUE
   60     | KW_FALSE
   61     | ARRAY

   62 decl_const: ',' decl_const
   63           | IDENTIFIER ASSIGN data decl_const
   64           | IDENTIFIER ARRAY ASSIGN data decl_const
   65           | ':' const_type

   66 decl: %empty
   67     | ',' decl
   68     | IDENTIFIER decl
   69     | IDENTIFIER ARRAY decl
   70     | IDENTIFIER ARRAY ASSIGN data decl
   71     | IDENTIFIER ASSIGN data decl
   72     | ':' type

   73 expr: POSINT
   74     | REAL
   75     | IDENTIFIER
   76     | IDENTIFIER ARRAY
   77     | func_call
   78     | '(' expr ')'
   79     | '+' expr
   80     | '-' expr
   81     | KW_NOT expr
   82     | expr '+' expr
   83     | expr '-' expr
   84     | expr '*' expr
   85     | expr '/' expr
   86     | expr '%' expr
   87     | expr '=' expr
   88     | expr '<' expr
   89     | expr KW_NOT_EQL expr
   90     | expr KW_LESS_EQL expr
   91     | expr KW_OR expr
   92     | expr KW_AND expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 86
'(' (40) 8 9 10 11 12 13 14 41 42 78
')' (41) 8 9 10 11 12 13 14 41 42 78
'*' (42) 84
'+' (43) 79 82
',' (44) 44 52 53 54 55 62 67
'-' (45) 80 83
'/' (47) 85
':' (58) 8 41 50 51 54 55 65 72
';' (59) 4 5 9 10 11 12 13 14 15 17 18 19
'<' (60) 88
'=' (61) 87
'[' (91) 49 50 53 54
']' (93) 49 50 53 54
'{' (123) 8 41
'}' (125) 8 41
error (256)
IDENTIFIER (258) 12 13 14 18 41 42 48 49 50 51 52 53 54 55 63 64 68
    69 70 71 75 76
POSINT (259) 56 73
REAL (260) 57 74
STRING (261) 58
ARRAY (262) 61 64 69 70 76
ASSIGN (263) 8 18 41 63 64 70 71
KW_INT (264) 8 30 35
KW_REAL (265) 31 36
KW_BOOL (266) 32 37
KW_STRING (267) 33 38
KW_FUNC (268) 8 41
KW_IF (269) 20
KW_THEN (270) 27
KW_ELSE (271) 29
KW_AND (272) 92
KW_OR (273) 91
KW_NOT (274) 81
KW_NOT_EQL (275) 89
KW_LESS_EQL (276) 90
KW_FI (277) 20
KW_WHILE (278) 21
KW_LOOP (279) 21
KW_POOL (280) 21
KW_CONST (281) 4 8 41
KW_LET (282) 5 17
KW_RETURN (283) 46
KW_START (284) 8
KW_LIMITER (285)
KW_TRUE (286) 59
KW_FALSE (287) 60
F_readS (288) 9
F_readI (289) 10
F_readR (290) 11
F_writeS (291) 12
F_writeI (292) 13
F_writeR (293) 14
"[]" (294) 34


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
input (57)
    on left: 1 2, on right: 0
part1 (58)
    on left: 3 4 5, on right: 2 4 5
part2 (59)
    on left: 6 7, on right: 2 7
main_func (60)
    on left: 8, on right: 2
defined_func (61)
    on left: 9 10 11 12 13 14, on right: 16
commands (62)
    on left: 15 16 17 18 19 20 21, on right: 22 23 24 25 28 40
main_body (63)
    on left: 22 23, on right: 8 23
while_state (64)
    on left: 24 25, on right: 21 25
if_state (65)
    on left: 26 27 28 29, on right: 20 27 28 29
type (66)
    on left: 30 31 32 33 34, on right: 34 41 50 51 54 55 72
const_type (67)
    on left: 35 36 37 38, on right: 65
func_body (68)
    on left: 39 40, on right: 40 41
func_decl (69)
    on left: 41, on right: 7
func_call (70)
    on left: 42, on right: 15 77
func_param (71)
    on left: 43 44 45, on right: 42 44
return_expr (72)
    on left: 46, on right: 19
func_par_decl (73)
    on left: 47 48 49 50 51 52 53 54 55, on right: 41 50 51 52 53 54
    55
data (74)
    on left: 56 57 58 59 60 61, on right: 63 64 70 71
decl_const (75)
    on left: 62 63 64 65, on right: 4 62 63 64
decl (76)
    on left: 66 67 68 69 70 71 72, on right: 5 17 67 68 69 70 71
expr (77)
    on left: 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
    91 92, on right: 18 21 27 44 45 46 78 79 80 81 82 83 84 85 86 87
    88 89 90 91 92


State 0

    0 $accept: . input $end
    1 input: . %empty  [$end]
    2      | . part1 part2 main_func
    3 part1: . %empty  [KW_CONST, KW_LET]
    4      | . part1 KW_CONST decl_const ';'
    5      | . part1 KW_LET decl ';'

    $end      reduce using rule 1 (input)
    $default  reduce using rule 3 (part1)

    input  go to state 1
    part1  go to state 2


State 1

    0 $accept: input . $end

    $end  shift, and go to state 3


State 2

    2 input: part1 . part2 main_func
    4 part1: part1 . KW_CONST decl_const ';'
    5      | part1 . KW_LET decl ';'
    6 part2: . %empty  [KW_CONST]
    7      | . part2 func_decl

    KW_CONST  shift, and go to state 4
    KW_LET    shift, and go to state 5

    KW_CONST  [reduce using rule 6 (part2)]

    part2  go to state 6


State 3

    0 $accept: input $end .

    $default  accept


State 4

    4 part1: part1 KW_CONST . decl_const ';'
   62 decl_const: . ',' decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 7
    ':'         shift, and go to state 8
    ','         shift, and go to state 9

    decl_const  go to state 10


State 5

    5 part1: part1 KW_LET . decl ';'
   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 11
    ':'         shift, and go to state 12
    ','         shift, and go to state 13

    $default  reduce using rule 66 (decl)

    decl  go to state 14


State 6

    2 input: part1 part2 . main_func
    7 part2: part2 . func_decl
    8 main_func: . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'
   41 func_decl: . KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'

    KW_CONST  shift, and go to state 15

    main_func  go to state 16
    func_decl  go to state 17


State 7

   63 decl_const: IDENTIFIER . ASSIGN data decl_const
   64           | IDENTIFIER . ARRAY ASSIGN data decl_const

    ARRAY   shift, and go to state 18
    ASSIGN  shift, and go to state 19


State 8

   35 const_type: . KW_INT
   36           | . KW_REAL
   37           | . KW_BOOL
   38           | . KW_STRING
   65 decl_const: ':' . const_type

    KW_INT     shift, and go to state 20
    KW_REAL    shift, and go to state 21
    KW_BOOL    shift, and go to state 22
    KW_STRING  shift, and go to state 23

    const_type  go to state 24


State 9

   62 decl_const: . ',' decl_const
   62           | ',' . decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 7
    ':'         shift, and go to state 8
    ','         shift, and go to state 9

    decl_const  go to state 25


State 10

    4 part1: part1 KW_CONST decl_const . ';'

    ';'  shift, and go to state 26


State 11

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   68     | IDENTIFIER . decl
   69     | . IDENTIFIER ARRAY decl
   69     | IDENTIFIER . ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   70     | IDENTIFIER . ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   71     | IDENTIFIER . ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 11
    ARRAY       shift, and go to state 27
    ASSIGN      shift, and go to state 28
    ':'         shift, and go to state 12
    ','         shift, and go to state 13

    $default  reduce using rule 66 (decl)

    decl  go to state 29


State 12

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   72 decl: ':' . type

    KW_INT     shift, and go to state 30
    KW_REAL    shift, and go to state 31
    KW_BOOL    shift, and go to state 32
    KW_STRING  shift, and go to state 33
    "[]"       shift, and go to state 34

    type  go to state 35


State 13

   66 decl: . %empty  [';']
   67     | . ',' decl
   67     | ',' . decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 11
    ':'         shift, and go to state 12
    ','         shift, and go to state 13

    $default  reduce using rule 66 (decl)

    decl  go to state 36


State 14

    5 part1: part1 KW_LET decl . ';'

    ';'  shift, and go to state 37


State 15

    8 main_func: KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'
   41 func_decl: KW_CONST . IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'

    IDENTIFIER  shift, and go to state 38
    KW_START    shift, and go to state 39


State 16

    2 input: part1 part2 main_func .

    $default  reduce using rule 2 (input)


State 17

    7 part2: part2 func_decl .

    $default  reduce using rule 7 (part2)


State 18

   64 decl_const: IDENTIFIER ARRAY . ASSIGN data decl_const

    ASSIGN  shift, and go to state 40


State 19

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   63 decl_const: IDENTIFIER ASSIGN . data decl_const

    POSINT    shift, and go to state 41
    REAL      shift, and go to state 42
    STRING    shift, and go to state 43
    ARRAY     shift, and go to state 44
    KW_TRUE   shift, and go to state 45
    KW_FALSE  shift, and go to state 46

    data  go to state 47


State 20

   35 const_type: KW_INT .

    $default  reduce using rule 35 (const_type)


State 21

   36 const_type: KW_REAL .

    $default  reduce using rule 36 (const_type)


State 22

   37 const_type: KW_BOOL .

    $default  reduce using rule 37 (const_type)


State 23

   38 const_type: KW_STRING .

    $default  reduce using rule 38 (const_type)


State 24

   65 decl_const: ':' const_type .

    $default  reduce using rule 65 (decl_const)


State 25

   62 decl_const: ',' decl_const .

    $default  reduce using rule 62 (decl_const)


State 26

    4 part1: part1 KW_CONST decl_const ';' .

    $default  reduce using rule 4 (part1)


State 27

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   69     | IDENTIFIER ARRAY . decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   70     | IDENTIFIER ARRAY . ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 11
    ASSIGN      shift, and go to state 48
    ':'         shift, and go to state 12
    ','         shift, and go to state 13

    $default  reduce using rule 66 (decl)

    decl  go to state 49


State 28

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   71 decl: IDENTIFIER ASSIGN . data decl

    POSINT    shift, and go to state 41
    REAL      shift, and go to state 42
    STRING    shift, and go to state 43
    ARRAY     shift, and go to state 44
    KW_TRUE   shift, and go to state 45
    KW_FALSE  shift, and go to state 46

    data  go to state 50


State 29

   68 decl: IDENTIFIER decl .

    $default  reduce using rule 68 (decl)


State 30

   30 type: KW_INT .

    $default  reduce using rule 30 (type)


State 31

   31 type: KW_REAL .

    $default  reduce using rule 31 (type)


State 32

   32 type: KW_BOOL .

    $default  reduce using rule 32 (type)


State 33

   33 type: KW_STRING .

    $default  reduce using rule 33 (type)


State 34

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   34     | "[]" . type

    KW_INT     shift, and go to state 30
    KW_REAL    shift, and go to state 31
    KW_BOOL    shift, and go to state 32
    KW_STRING  shift, and go to state 33
    "[]"       shift, and go to state 34

    type  go to state 51


State 35

   72 decl: ':' type .

    $default  reduce using rule 72 (decl)


State 36

   67 decl: ',' decl .

    $default  reduce using rule 67 (decl)


State 37

    5 part1: part1 KW_LET decl ';' .

    $default  reduce using rule 5 (part1)


State 38

   41 func_decl: KW_CONST IDENTIFIER . ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'

    ASSIGN  shift, and go to state 52


State 39

    8 main_func: KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'

    ASSIGN  shift, and go to state 53


State 40

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   64 decl_const: IDENTIFIER ARRAY ASSIGN . data decl_const

    POSINT    shift, and go to state 41
    REAL      shift, and go to state 42
    STRING    shift, and go to state 43
    ARRAY     shift, and go to state 44
    KW_TRUE   shift, and go to state 45
    KW_FALSE  shift, and go to state 46

    data  go to state 54


State 41

   56 data: POSINT .

    $default  reduce using rule 56 (data)


State 42

   57 data: REAL .

    $default  reduce using rule 57 (data)


State 43

   58 data: STRING .

    $default  reduce using rule 58 (data)


State 44

   61 data: ARRAY .

    $default  reduce using rule 61 (data)


State 45

   59 data: KW_TRUE .

    $default  reduce using rule 59 (data)


State 46

   60 data: KW_FALSE .

    $default  reduce using rule 60 (data)


State 47

   62 decl_const: . ',' decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   63           | IDENTIFIER ASSIGN data . decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 7
    ':'         shift, and go to state 8
    ','         shift, and go to state 9

    decl_const  go to state 55


State 48

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   70 decl: IDENTIFIER ARRAY ASSIGN . data decl

    POSINT    shift, and go to state 41
    REAL      shift, and go to state 42
    STRING    shift, and go to state 43
    ARRAY     shift, and go to state 44
    KW_TRUE   shift, and go to state 45
    KW_FALSE  shift, and go to state 46

    data  go to state 56


State 49

   69 decl: IDENTIFIER ARRAY decl .

    $default  reduce using rule 69 (decl)


State 50

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   71     | IDENTIFIER ASSIGN data . decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 11
    ':'         shift, and go to state 12
    ','         shift, and go to state 13

    $default  reduce using rule 66 (decl)

    decl  go to state 57


State 51

   34 type: "[]" type .

    $default  reduce using rule 34 (type)


State 52

   41 func_decl: KW_CONST IDENTIFIER ASSIGN . '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}'

    '('  shift, and go to state 58


State 53

    8 main_func: KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT KW_FUNC '{' main_body '}'

    '('  shift, and go to state 59


State 54

   62 decl_const: . ',' decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   64           | IDENTIFIER ARRAY ASSIGN data . decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 7
    ':'         shift, and go to state 8
    ','         shift, and go to state 9

    decl_const  go to state 60


State 55

   63 decl_const: IDENTIFIER ASSIGN data decl_const .

    $default  reduce using rule 63 (decl_const)


State 56

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   70     | IDENTIFIER ARRAY ASSIGN data . decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 11
    ':'         shift, and go to state 12
    ','         shift, and go to state 13

    $default  reduce using rule 66 (decl)

    decl  go to state 61


State 57

   71 decl: IDENTIFIER ASSIGN data decl .

    $default  reduce using rule 71 (decl)


State 58

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' . func_par_decl ')' ':' type KW_FUNC '{' func_body '}'
   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 62

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 63


State 59

    8 main_func: KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT KW_FUNC '{' main_body '}'

    ')'  shift, and go to state 64


State 60

   64 decl_const: IDENTIFIER ARRAY ASSIGN data decl_const .

    $default  reduce using rule 64 (decl_const)


State 61

   70 decl: IDENTIFIER ARRAY ASSIGN data decl .

    $default  reduce using rule 70 (decl)


State 62

   48 func_par_decl: IDENTIFIER .  [')']
   49              | IDENTIFIER . '[' ']'
   50              | IDENTIFIER . '[' ']' ':' type func_par_decl
   51              | IDENTIFIER . ':' type func_par_decl
   52              | IDENTIFIER . ',' func_par_decl
   53              | IDENTIFIER . '[' ']' ',' func_par_decl
   54              | IDENTIFIER . '[' ']' ':' type ',' func_par_decl
   55              | IDENTIFIER . ':' type ',' func_par_decl

    ':'  shift, and go to state 65
    ','  shift, and go to state 66
    '['  shift, and go to state 67

    $default  reduce using rule 48 (func_par_decl)


State 63

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl . ')' ':' type KW_FUNC '{' func_body '}'

    ')'  shift, and go to state 68


State 64

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT KW_FUNC '{' main_body '}'

    ':'  shift, and go to state 69


State 65

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   51 func_par_decl: IDENTIFIER ':' . type func_par_decl
   55              | IDENTIFIER ':' . type ',' func_par_decl

    KW_INT     shift, and go to state 30
    KW_REAL    shift, and go to state 31
    KW_BOOL    shift, and go to state 32
    KW_STRING  shift, and go to state 33
    "[]"       shift, and go to state 34

    type  go to state 70


State 66

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   52              | IDENTIFIER ',' . func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 62

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 71


State 67

   49 func_par_decl: IDENTIFIER '[' . ']'
   50              | IDENTIFIER '[' . ']' ':' type func_par_decl
   53              | IDENTIFIER '[' . ']' ',' func_par_decl
   54              | IDENTIFIER '[' . ']' ':' type ',' func_par_decl

    ']'  shift, and go to state 72


State 68

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' . ':' type KW_FUNC '{' func_body '}'

    ':'  shift, and go to state 73


State 69

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT KW_FUNC '{' main_body '}'

    KW_INT  shift, and go to state 74


State 70

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   51              | IDENTIFIER ':' type . func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl
   55              | IDENTIFIER ':' type . ',' func_par_decl

    IDENTIFIER  shift, and go to state 62
    ','         shift, and go to state 75

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 76


State 71

   52 func_par_decl: IDENTIFIER ',' func_par_decl .

    $default  reduce using rule 52 (func_par_decl)


State 72

   49 func_par_decl: IDENTIFIER '[' ']' .  [')']
   50              | IDENTIFIER '[' ']' . ':' type func_par_decl
   53              | IDENTIFIER '[' ']' . ',' func_par_decl
   54              | IDENTIFIER '[' ']' . ':' type ',' func_par_decl

    ':'  shift, and go to state 77
    ','  shift, and go to state 78

    $default  reduce using rule 49 (func_par_decl)


State 73

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' . type KW_FUNC '{' func_body '}'

    KW_INT     shift, and go to state 30
    KW_REAL    shift, and go to state 31
    KW_BOOL    shift, and go to state 32
    KW_STRING  shift, and go to state 33
    "[]"       shift, and go to state 34

    type  go to state 79


State 74

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . KW_FUNC '{' main_body '}'

    KW_FUNC  shift, and go to state 80


State 75

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl
   55              | IDENTIFIER ':' type ',' . func_par_decl

    IDENTIFIER  shift, and go to state 62

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 81


State 76

   51 func_par_decl: IDENTIFIER ':' type func_par_decl .

    $default  reduce using rule 51 (func_par_decl)


State 77

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   50 func_par_decl: IDENTIFIER '[' ']' ':' . type func_par_decl
   54              | IDENTIFIER '[' ']' ':' . type ',' func_par_decl

    KW_INT     shift, and go to state 30
    KW_REAL    shift, and go to state 31
    KW_BOOL    shift, and go to state 32
    KW_STRING  shift, and go to state 33
    "[]"       shift, and go to state 34

    type  go to state 82


State 78

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   53              | IDENTIFIER '[' ']' ',' . func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 62

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 83


State 79

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type . KW_FUNC '{' func_body '}'

    KW_FUNC  shift, and go to state 84


State 80

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC . '{' main_body '}'

    '{'  shift, and go to state 85


State 81

   55 func_par_decl: IDENTIFIER ':' type ',' func_par_decl .

    $default  reduce using rule 55 (func_par_decl)


State 82

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   50              | IDENTIFIER '[' ']' ':' type . func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   54              | IDENTIFIER '[' ']' ':' type . ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 62
    ','         shift, and go to state 86

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 87


State 83

   53 func_par_decl: IDENTIFIER '[' ']' ',' func_par_decl .

    $default  reduce using rule 53 (func_par_decl)


State 84

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC . '{' func_body '}'

    '{'  shift, and go to state 88


State 85

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' . main_body '}'
    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   22 main_body: . commands
   23          | . commands main_body
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 89
    KW_IF       shift, and go to state 90
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99

    defined_func  go to state 100
    commands      go to state 101
    main_body     go to state 102
    func_call     go to state 103
    return_expr   go to state 104


State 86

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   54              | IDENTIFIER '[' ']' ':' type ',' . func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 62

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 105


State 87

   50 func_par_decl: IDENTIFIER '[' ']' ':' type func_par_decl .

    $default  reduce using rule 50 (func_par_decl)


State 88

    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   39 func_body: . %empty  ['}']
   40          | . commands func_body
   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' . func_body '}'
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 89
    KW_IF       shift, and go to state 90
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99

    $default  reduce using rule 39 (func_body)

    defined_func  go to state 100
    commands      go to state 106
    func_body     go to state 107
    func_call     go to state 103
    return_expr   go to state 104


State 89

   18 commands: IDENTIFIER . ASSIGN expr ';'
   42 func_call: IDENTIFIER . '(' func_param ')'

    ASSIGN  shift, and go to state 108
    '('     shift, and go to state 109


State 90

    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   20         | KW_IF . if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   26 if_state: . %empty  [KW_FI]
   27         | . expr KW_THEN if_state
   28         | . commands if_state
   29         | . KW_ELSE if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 110
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_IF       shift, and go to state 90
    KW_ELSE     shift, and go to state 113
    KW_NOT      shift, and go to state 114
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    $default  reduce using rule 26 (if_state)

    defined_func  go to state 100
    commands      go to state 118
    if_state      go to state 119
    func_call     go to state 120
    return_expr   go to state 104
    expr          go to state 121


State 91

   21 commands: KW_WHILE . expr KW_LOOP while_state KW_POOL
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 124


State 92

   17 commands: KW_LET . decl ';'
   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 11
    ':'         shift, and go to state 12
    ','         shift, and go to state 13

    $default  reduce using rule 66 (decl)

    decl  go to state 125


State 93

   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: KW_RETURN . expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 126


State 94

    9 defined_func: F_readS . '(' ')' ';'

    '('  shift, and go to state 127


State 95

   10 defined_func: F_readI . '(' ')' ';'

    '('  shift, and go to state 128


State 96

   11 defined_func: F_readR . '(' ')' ';'

    '('  shift, and go to state 129


State 97

   12 defined_func: F_writeS . '(' IDENTIFIER ')' ';'

    '('  shift, and go to state 130


State 98

   13 defined_func: F_writeI . '(' IDENTIFIER ')' ';'

    '('  shift, and go to state 131


State 99

   14 defined_func: F_writeR . '(' IDENTIFIER ')' ';'

    '('  shift, and go to state 132


State 100

   16 commands: defined_func .

    $default  reduce using rule 16 (commands)


State 101

    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   22 main_body: . commands
   22          | commands .  ['}']
   23          | . commands main_body
   23          | commands . main_body
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 89
    KW_IF       shift, and go to state 90
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99

    $default  reduce using rule 22 (main_body)

    defined_func  go to state 100
    commands      go to state 101
    main_body     go to state 133
    func_call     go to state 103
    return_expr   go to state 104


State 102

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body . '}'

    '}'  shift, and go to state 134


State 103

   15 commands: func_call . ';'

    ';'  shift, and go to state 135


State 104

   19 commands: return_expr . ';'

    ';'  shift, and go to state 136


State 105

   54 func_par_decl: IDENTIFIER '[' ']' ':' type ',' func_par_decl .

    $default  reduce using rule 54 (func_par_decl)


State 106

    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   39 func_body: . %empty  ['}']
   40          | . commands func_body
   40          | commands . func_body
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 89
    KW_IF       shift, and go to state 90
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99

    $default  reduce using rule 39 (func_body)

    defined_func  go to state 100
    commands      go to state 106
    func_body     go to state 137
    func_call     go to state 103
    return_expr   go to state 104


State 107

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body . '}'

    '}'  shift, and go to state 138


State 108

   18 commands: IDENTIFIER ASSIGN . expr ';'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 139


State 109

   42 func_call: . IDENTIFIER '(' func_param ')'
   42          | IDENTIFIER '(' . func_param ')'
   43 func_param: . %empty  [')']
   44           | . expr ',' func_param
   45           | . expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    $default  reduce using rule 43 (func_param)

    func_call   go to state 123
    func_param  go to state 140
    expr        go to state 141


State 110

   18 commands: IDENTIFIER . ASSIGN expr ';'
   42 func_call: IDENTIFIER . '(' func_param ')'
   75 expr: IDENTIFIER .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, '=', '<', '-', '+', '*', '/', '%']
   76     | IDENTIFIER . ARRAY

    ARRAY   shift, and go to state 142
    ASSIGN  shift, and go to state 108
    '('     shift, and go to state 109

    $default  reduce using rule 75 (expr)


State 111

   73 expr: POSINT .

    $default  reduce using rule 73 (expr)


State 112

   74 expr: REAL .

    $default  reduce using rule 74 (expr)


State 113

    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   26 if_state: . %empty  [KW_FI]
   27         | . expr KW_THEN if_state
   28         | . commands if_state
   29         | . KW_ELSE if_state
   29         | KW_ELSE . if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 110
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_IF       shift, and go to state 90
    KW_ELSE     shift, and go to state 113
    KW_NOT      shift, and go to state 114
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    $default  reduce using rule 26 (if_state)

    defined_func  go to state 100
    commands      go to state 118
    if_state      go to state 143
    func_call     go to state 120
    return_expr   go to state 104
    expr          go to state 121


State 114

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   81     | KW_NOT . expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 144


State 115

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   80     | '-' . expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 145


State 116

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   79     | '+' . expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 146


State 117

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   78     | '(' . expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 147


State 118

    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   26 if_state: . %empty  [KW_FI]
   27         | . expr KW_THEN if_state
   28         | . commands if_state
   28         | commands . if_state
   29         | . KW_ELSE if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 110
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_IF       shift, and go to state 90
    KW_ELSE     shift, and go to state 113
    KW_NOT      shift, and go to state 114
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    $default  reduce using rule 26 (if_state)

    defined_func  go to state 100
    commands      go to state 118
    if_state      go to state 148
    func_call     go to state 120
    return_expr   go to state 104
    expr          go to state 121


State 119

   20 commands: KW_IF if_state . KW_FI

    KW_FI  shift, and go to state 149


State 120

   15 commands: func_call . ';'
   77 expr: func_call .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, '=', '<', '-', '+', '*', '/', '%']

    ';'  shift, and go to state 135

    $default  reduce using rule 77 (expr)


State 121

   27 if_state: expr . KW_THEN if_state
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_THEN      shift, and go to state 150
    KW_AND       shift, and go to state 151
    KW_OR        shift, and go to state 152
    KW_NOT_EQL   shift, and go to state 153
    KW_LESS_EQL  shift, and go to state 154
    '='          shift, and go to state 155
    '<'          shift, and go to state 156
    '-'          shift, and go to state 157
    '+'          shift, and go to state 158
    '*'          shift, and go to state 159
    '/'          shift, and go to state 160
    '%'          shift, and go to state 161


State 122

   42 func_call: IDENTIFIER . '(' func_param ')'
   75 expr: IDENTIFIER .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   76     | IDENTIFIER . ARRAY

    ARRAY  shift, and go to state 142
    '('    shift, and go to state 109

    $default  reduce using rule 75 (expr)


State 123

   77 expr: func_call .

    $default  reduce using rule 77 (expr)


State 124

   21 commands: KW_WHILE expr . KW_LOOP while_state KW_POOL
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 151
    KW_OR        shift, and go to state 152
    KW_NOT_EQL   shift, and go to state 153
    KW_LESS_EQL  shift, and go to state 154
    KW_LOOP      shift, and go to state 162
    '='          shift, and go to state 155
    '<'          shift, and go to state 156
    '-'          shift, and go to state 157
    '+'          shift, and go to state 158
    '*'          shift, and go to state 159
    '/'          shift, and go to state 160
    '%'          shift, and go to state 161


State 125

   17 commands: KW_LET decl . ';'

    ';'  shift, and go to state 163


State 126

   46 return_expr: KW_RETURN expr .  [';']
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 151
    KW_OR        shift, and go to state 152
    KW_NOT_EQL   shift, and go to state 153
    KW_LESS_EQL  shift, and go to state 154
    '='          shift, and go to state 155
    '<'          shift, and go to state 156
    '-'          shift, and go to state 157
    '+'          shift, and go to state 158
    '*'          shift, and go to state 159
    '/'          shift, and go to state 160
    '%'          shift, and go to state 161

    $default  reduce using rule 46 (return_expr)


State 127

    9 defined_func: F_readS '(' . ')' ';'

    ')'  shift, and go to state 164


State 128

   10 defined_func: F_readI '(' . ')' ';'

    ')'  shift, and go to state 165


State 129

   11 defined_func: F_readR '(' . ')' ';'

    ')'  shift, and go to state 166


State 130

   12 defined_func: F_writeS '(' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 167


State 131

   13 defined_func: F_writeI '(' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 168


State 132

   14 defined_func: F_writeR '(' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 169


State 133

   23 main_body: commands main_body .

    $default  reduce using rule 23 (main_body)


State 134

    8 main_func: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_FUNC '{' main_body '}' .

    $default  reduce using rule 8 (main_func)


State 135

   15 commands: func_call ';' .

    $default  reduce using rule 15 (commands)


State 136

   19 commands: return_expr ';' .

    $default  reduce using rule 19 (commands)


State 137

   40 func_body: commands func_body .

    $default  reduce using rule 40 (func_body)


State 138

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type KW_FUNC '{' func_body '}' .

    $default  reduce using rule 41 (func_decl)


State 139

   18 commands: IDENTIFIER ASSIGN expr . ';'
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 151
    KW_OR        shift, and go to state 152
    KW_NOT_EQL   shift, and go to state 153
    KW_LESS_EQL  shift, and go to state 154
    '='          shift, and go to state 155
    '<'          shift, and go to state 156
    '-'          shift, and go to state 157
    '+'          shift, and go to state 158
    '*'          shift, and go to state 159
    '/'          shift, and go to state 160
    '%'          shift, and go to state 161
    ';'          shift, and go to state 170


State 140

   42 func_call: IDENTIFIER '(' func_param . ')'

    ')'  shift, and go to state 171


State 141

   44 func_param: expr . ',' func_param
   45           | expr .  [')']
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 151
    KW_OR        shift, and go to state 152
    KW_NOT_EQL   shift, and go to state 153
    KW_LESS_EQL  shift, and go to state 154
    '='          shift, and go to state 155
    '<'          shift, and go to state 156
    '-'          shift, and go to state 157
    '+'          shift, and go to state 158
    '*'          shift, and go to state 159
    '/'          shift, and go to state 160
    '%'          shift, and go to state 161
    ','          shift, and go to state 172

    $default  reduce using rule 45 (func_param)


State 142

   76 expr: IDENTIFIER ARRAY .

    $default  reduce using rule 76 (expr)


State 143

   29 if_state: KW_ELSE if_state .

    $default  reduce using rule 29 (if_state)


State 144

   81 expr: KW_NOT expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   82     | expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    $default  reduce using rule 81 (expr)

    Conflict between rule 81 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 81 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 81 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < KW_NOT).
    Conflict between rule 81 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < KW_NOT).
    Conflict between rule 81 and token '=' resolved as reduce ('=' < KW_NOT).
    Conflict between rule 81 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 81 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 81 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 81 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 81 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 81 and token '%' resolved as reduce ('%' < KW_NOT).


State 145

   80 expr: '-' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   82     | expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '*'  shift, and go to state 159
    '/'  shift, and go to state 160
    '%'  shift, and go to state 161

    $default  reduce using rule 80 (expr)

    Conflict between rule 80 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 80 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 80 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '-').
    Conflict between rule 80 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '-').
    Conflict between rule 80 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 80 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 80 and token '-' resolved as reduce (%left '-').
    Conflict between rule 80 and token '+' resolved as reduce (%left '+').
    Conflict between rule 80 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 80 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 80 and token '%' resolved as shift ('-' < '%').


State 146

   79 expr: '+' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   82     | expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '*'  shift, and go to state 159
    '/'  shift, and go to state 160
    '%'  shift, and go to state 161

    $default  reduce using rule 79 (expr)

    Conflict between rule 79 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 79 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 79 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '+').
    Conflict between rule 79 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '+').
    Conflict between rule 79 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 79 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 79 and token '-' resolved as reduce (%left '-').
    Conflict between rule 79 and token '+' resolved as reduce (%left '+').
    Conflict between rule 79 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 79 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 79 and token '%' resolved as shift ('+' < '%').


State 147

   78 expr: '(' expr . ')'
   82     | expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 151
    KW_OR        shift, and go to state 152
    KW_NOT_EQL   shift, and go to state 153
    KW_LESS_EQL  shift, and go to state 154
    '='          shift, and go to state 155
    '<'          shift, and go to state 156
    '-'          shift, and go to state 157
    '+'          shift, and go to state 158
    '*'          shift, and go to state 159
    '/'          shift, and go to state 160
    '%'          shift, and go to state 161
    ')'          shift, and go to state 173


State 148

   28 if_state: commands if_state .

    $default  reduce using rule 28 (if_state)


State 149

   20 commands: KW_IF if_state KW_FI .

    $default  reduce using rule 20 (commands)


State 150

    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   26 if_state: . %empty  [KW_FI]
   27         | . expr KW_THEN if_state
   27         | expr KW_THEN . if_state
   28         | . commands if_state
   29         | . KW_ELSE if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 110
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_IF       shift, and go to state 90
    KW_ELSE     shift, and go to state 113
    KW_NOT      shift, and go to state 114
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    $default  reduce using rule 26 (if_state)

    defined_func  go to state 100
    commands      go to state 118
    if_state      go to state 174
    func_call     go to state 120
    return_expr   go to state 104
    expr          go to state 121


State 151

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr
   92     | expr KW_AND . expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 175


State 152

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   91     | expr KW_OR . expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 176


State 153

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   89     | expr KW_NOT_EQL . expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 177


State 154

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   90     | expr KW_LESS_EQL . expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 178


State 155

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   87     | expr '=' . expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 179


State 156

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   88     | expr '<' . expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 180


State 157

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   83     | expr '-' . expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 181


State 158

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   82     | expr '+' . expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 182


State 159

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   84     | expr '*' . expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 183


State 160

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   85     | expr '/' . expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 184


State 161

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   86     | expr '%' . expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    func_call  go to state 123
    expr       go to state 185


State 162

    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   21         | KW_WHILE expr KW_LOOP . while_state KW_POOL
   24 while_state: . commands
   25            | . commands while_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 89
    KW_IF       shift, and go to state 90
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99

    defined_func  go to state 100
    commands      go to state 186
    while_state   go to state 187
    func_call     go to state 103
    return_expr   go to state 104


State 163

   17 commands: KW_LET decl ';' .

    $default  reduce using rule 17 (commands)


State 164

    9 defined_func: F_readS '(' ')' . ';'

    ';'  shift, and go to state 188


State 165

   10 defined_func: F_readI '(' ')' . ';'

    ';'  shift, and go to state 189


State 166

   11 defined_func: F_readR '(' ')' . ';'

    ';'  shift, and go to state 190


State 167

   12 defined_func: F_writeS '(' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 191


State 168

   13 defined_func: F_writeI '(' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 192


State 169

   14 defined_func: F_writeR '(' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 193


State 170

   18 commands: IDENTIFIER ASSIGN expr ';' .

    $default  reduce using rule 18 (commands)


State 171

   42 func_call: IDENTIFIER '(' func_param ')' .

    $default  reduce using rule 42 (func_call)


State 172

   42 func_call: . IDENTIFIER '(' func_param ')'
   43 func_param: . %empty  [')']
   44           | . expr ',' func_param
   44           | expr ',' . func_param
   45           | . expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 122
    POSINT      shift, and go to state 111
    REAL        shift, and go to state 112
    KW_NOT      shift, and go to state 114
    '-'         shift, and go to state 115
    '+'         shift, and go to state 116
    '('         shift, and go to state 117

    $default  reduce using rule 43 (func_param)

    func_call   go to state 123
    func_param  go to state 194
    expr        go to state 141


State 173

   78 expr: '(' expr ')' .

    $default  reduce using rule 78 (expr)


State 174

   27 if_state: expr KW_THEN if_state .

    $default  reduce using rule 27 (if_state)


State 175

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr
   92     | expr KW_AND expr .  [KW_THEN, KW_AND, KW_OR, KW_LOOP, ';', ')', ',']

    KW_NOT_EQL   shift, and go to state 153
    KW_LESS_EQL  shift, and go to state 154
    '='          shift, and go to state 155
    '<'          shift, and go to state 156
    '-'          shift, and go to state 157
    '+'          shift, and go to state 158
    '*'          shift, and go to state 159
    '/'          shift, and go to state 160
    '%'          shift, and go to state 161

    $default  reduce using rule 92 (expr)

    Conflict between rule 92 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 92 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 92 and token KW_NOT_EQL resolved as shift (KW_AND < KW_NOT_EQL).
    Conflict between rule 92 and token KW_LESS_EQL resolved as shift (KW_AND < KW_LESS_EQL).
    Conflict between rule 92 and token '=' resolved as shift (KW_AND < '=').
    Conflict between rule 92 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 92 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 92 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 92 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 92 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 92 and token '%' resolved as shift (KW_AND < '%').


State 176

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   91     | expr KW_OR expr .  [KW_THEN, KW_OR, KW_LOOP, ';', ')', ',']
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 151
    KW_NOT_EQL   shift, and go to state 153
    KW_LESS_EQL  shift, and go to state 154
    '='          shift, and go to state 155
    '<'          shift, and go to state 156
    '-'          shift, and go to state 157
    '+'          shift, and go to state 158
    '*'          shift, and go to state 159
    '/'          shift, and go to state 160
    '%'          shift, and go to state 161

    $default  reduce using rule 91 (expr)

    Conflict between rule 91 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 91 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 91 and token KW_NOT_EQL resolved as shift (KW_OR < KW_NOT_EQL).
    Conflict between rule 91 and token KW_LESS_EQL resolved as shift (KW_OR < KW_LESS_EQL).
    Conflict between rule 91 and token '=' resolved as shift (KW_OR < '=').
    Conflict between rule 91 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 91 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 91 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 91 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 91 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 91 and token '%' resolved as shift (KW_OR < '%').


State 177

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   89     | expr KW_NOT_EQL expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '-'  shift, and go to state 157
    '+'  shift, and go to state 158
    '*'  shift, and go to state 159
    '/'  shift, and go to state 160
    '%'  shift, and go to state 161

    $default  reduce using rule 89 (expr)

    Conflict between rule 89 and token KW_AND resolved as reduce (KW_AND < KW_NOT_EQL).
    Conflict between rule 89 and token KW_OR resolved as reduce (KW_OR < KW_NOT_EQL).
    Conflict between rule 89 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 89 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 89 and token '=' resolved as reduce (%left '=').
    Conflict between rule 89 and token '<' resolved as reduce (%left '<').
    Conflict between rule 89 and token '-' resolved as shift (KW_NOT_EQL < '-').
    Conflict between rule 89 and token '+' resolved as shift (KW_NOT_EQL < '+').
    Conflict between rule 89 and token '*' resolved as shift (KW_NOT_EQL < '*').
    Conflict between rule 89 and token '/' resolved as shift (KW_NOT_EQL < '/').
    Conflict between rule 89 and token '%' resolved as shift (KW_NOT_EQL < '%').


State 178

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   90     | expr KW_LESS_EQL expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '-'  shift, and go to state 157
    '+'  shift, and go to state 158
    '*'  shift, and go to state 159
    '/'  shift, and go to state 160
    '%'  shift, and go to state 161

    $default  reduce using rule 90 (expr)

    Conflict between rule 90 and token KW_AND resolved as reduce (KW_AND < KW_LESS_EQL).
    Conflict between rule 90 and token KW_OR resolved as reduce (KW_OR < KW_LESS_EQL).
    Conflict between rule 90 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 90 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 90 and token '=' resolved as reduce (%left '=').
    Conflict between rule 90 and token '<' resolved as reduce (%left '<').
    Conflict between rule 90 and token '-' resolved as shift (KW_LESS_EQL < '-').
    Conflict between rule 90 and token '+' resolved as shift (KW_LESS_EQL < '+').
    Conflict between rule 90 and token '*' resolved as shift (KW_LESS_EQL < '*').
    Conflict between rule 90 and token '/' resolved as shift (KW_LESS_EQL < '/').
    Conflict between rule 90 and token '%' resolved as shift (KW_LESS_EQL < '%').


State 179

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   87     | expr '=' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '-'  shift, and go to state 157
    '+'  shift, and go to state 158
    '*'  shift, and go to state 159
    '/'  shift, and go to state 160
    '%'  shift, and go to state 161

    $default  reduce using rule 87 (expr)

    Conflict between rule 87 and token KW_AND resolved as reduce (KW_AND < '=').
    Conflict between rule 87 and token KW_OR resolved as reduce (KW_OR < '=').
    Conflict between rule 87 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 87 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 87 and token '=' resolved as reduce (%left '=').
    Conflict between rule 87 and token '<' resolved as reduce (%left '<').
    Conflict between rule 87 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 87 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 87 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 87 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 87 and token '%' resolved as shift ('=' < '%').


State 180

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   88     | expr '<' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '-'  shift, and go to state 157
    '+'  shift, and go to state 158
    '*'  shift, and go to state 159
    '/'  shift, and go to state 160
    '%'  shift, and go to state 161

    $default  reduce using rule 88 (expr)

    Conflict between rule 88 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 88 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 88 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 88 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 88 and token '=' resolved as reduce (%left '=').
    Conflict between rule 88 and token '<' resolved as reduce (%left '<').
    Conflict between rule 88 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 88 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 88 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 88 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 88 and token '%' resolved as shift ('<' < '%').


State 181

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   83     | expr '-' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '*'  shift, and go to state 159
    '/'  shift, and go to state 160
    '%'  shift, and go to state 161

    $default  reduce using rule 83 (expr)

    Conflict between rule 83 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 83 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 83 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '-').
    Conflict between rule 83 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '-').
    Conflict between rule 83 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 83 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 83 and token '-' resolved as reduce (%left '-').
    Conflict between rule 83 and token '+' resolved as reduce (%left '+').
    Conflict between rule 83 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 83 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 83 and token '%' resolved as shift ('-' < '%').


State 182

   82 expr: expr . '+' expr
   82     | expr '+' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '*'  shift, and go to state 159
    '/'  shift, and go to state 160
    '%'  shift, and go to state 161

    $default  reduce using rule 82 (expr)

    Conflict between rule 82 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 82 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 82 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '+').
    Conflict between rule 82 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '+').
    Conflict between rule 82 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 82 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 82 and token '-' resolved as reduce (%left '-').
    Conflict between rule 82 and token '+' resolved as reduce (%left '+').
    Conflict between rule 82 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 82 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 82 and token '%' resolved as shift ('+' < '%').


State 183

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   84     | expr '*' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    $default  reduce using rule 84 (expr)

    Conflict between rule 84 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 84 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 84 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '*').
    Conflict between rule 84 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '*').
    Conflict between rule 84 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 84 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 84 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 84 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 84 and token '*' resolved as reduce (%left '*').
    Conflict between rule 84 and token '/' resolved as reduce (%left '/').
    Conflict between rule 84 and token '%' resolved as reduce (%left '%').


State 184

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   85     | expr '/' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    $default  reduce using rule 85 (expr)

    Conflict between rule 85 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 85 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 85 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '/').
    Conflict between rule 85 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '/').
    Conflict between rule 85 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 85 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 85 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 85 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 85 and token '*' resolved as reduce (%left '*').
    Conflict between rule 85 and token '/' resolved as reduce (%left '/').
    Conflict between rule 85 and token '%' resolved as reduce (%left '%').


State 185

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   86     | expr '%' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    $default  reduce using rule 86 (expr)

    Conflict between rule 86 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 86 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 86 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '%').
    Conflict between rule 86 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '%').
    Conflict between rule 86 and token '=' resolved as reduce ('=' < '%').
    Conflict between rule 86 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 86 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 86 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 86 and token '*' resolved as reduce (%left '*').
    Conflict between rule 86 and token '/' resolved as reduce (%left '/').
    Conflict between rule 86 and token '%' resolved as reduce (%left '%').


State 186

    9 defined_func: . F_readS '(' ')' ';'
   10             | . F_readI '(' ')' ';'
   11             | . F_readR '(' ')' ';'
   12             | . F_writeS '(' IDENTIFIER ')' ';'
   13             | . F_writeI '(' IDENTIFIER ')' ';'
   14             | . F_writeR '(' IDENTIFIER ')' ';'
   15 commands: . func_call ';'
   16         | . defined_func
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   24 while_state: . commands
   24            | commands .  [KW_POOL]
   25            | . commands while_state
   25            | commands . while_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 89
    KW_IF       shift, and go to state 90
    KW_WHILE    shift, and go to state 91
    KW_LET      shift, and go to state 92
    KW_RETURN   shift, and go to state 93
    F_readS     shift, and go to state 94
    F_readI     shift, and go to state 95
    F_readR     shift, and go to state 96
    F_writeS    shift, and go to state 97
    F_writeI    shift, and go to state 98
    F_writeR    shift, and go to state 99

    $default  reduce using rule 24 (while_state)

    defined_func  go to state 100
    commands      go to state 186
    while_state   go to state 195
    func_call     go to state 103
    return_expr   go to state 104


State 187

   21 commands: KW_WHILE expr KW_LOOP while_state . KW_POOL

    KW_POOL  shift, and go to state 196


State 188

    9 defined_func: F_readS '(' ')' ';' .

    $default  reduce using rule 9 (defined_func)


State 189

   10 defined_func: F_readI '(' ')' ';' .

    $default  reduce using rule 10 (defined_func)


State 190

   11 defined_func: F_readR '(' ')' ';' .

    $default  reduce using rule 11 (defined_func)


State 191

   12 defined_func: F_writeS '(' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 197


State 192

   13 defined_func: F_writeI '(' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 198


State 193

   14 defined_func: F_writeR '(' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 199


State 194

   44 func_param: expr ',' func_param .

    $default  reduce using rule 44 (func_param)


State 195

   25 while_state: commands while_state .

    $default  reduce using rule 25 (while_state)


State 196

   21 commands: KW_WHILE expr KW_LOOP while_state KW_POOL .

    $default  reduce using rule 21 (commands)


State 197

   12 defined_func: F_writeS '(' IDENTIFIER ')' ';' .

    $default  reduce using rule 12 (defined_func)


State 198

   13 defined_func: F_writeI '(' IDENTIFIER ')' ';' .

    $default  reduce using rule 13 (defined_func)


State 199

   14 defined_func: F_writeR '(' IDENTIFIER ')' ';' .

    $default  reduce using rule 14 (defined_func)
