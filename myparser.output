State 0 conflicts: 1 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | part3

    3 part3: %empty
    4      | part3 body

    5 body: KW_CONST decl_const ';'
    6     | func_decl
    7     | commands
    8     | defined_func
    9     | KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

   10 defined_func: F_readS '(' ')' ';'
   11             | F_readI '(' ')' ';'
   12             | F_readR '(' ')' ';'
   13             | F_writeS '(' IDENTIFIER ')' ';'
   14             | F_writeI '(' IDENTIFIER ')' ';'
   15             | F_writeR '(' IDENTIFIER ')' ';'

   16 commands: func_call ';'
   17         | KW_LET decl ';'
   18         | IDENTIFIER ASSIGN expr ';'
   19         | return_expr ';'
   20         | KW_IF if_state KW_FI
   21         | KW_WHILE expr KW_LOOP while_state KW_POOL

   22 main_body: commands
   23          | commands main_body

   24 while_state: commands
   25            | commands while_state

   26 if_state: %empty
   27         | expr KW_THEN if_state
   28         | commands if_state
   29         | KW_ELSE if_state

   30 type: KW_INT
   31     | KW_REAL
   32     | KW_BOOL
   33     | KW_STRING
   34     | "[]" type

   35 const_type: KW_INT
   36           | KW_REAL
   37           | KW_BOOL
   38           | KW_STRING

   39 func_body: %empty
   40          | commands func_body

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}'

   42 func_call: IDENTIFIER '(' func_param ')'

   43 func_param: %empty
   44           | expr ',' func_param
   45           | expr

   46 return_expr: KW_RETURN expr

   47 func_par_decl: %empty
   48              | IDENTIFIER
   49              | IDENTIFIER '[' ']'
   50              | IDENTIFIER '[' ']' ':' type func_par_decl
   51              | IDENTIFIER ':' type func_par_decl
   52              | IDENTIFIER ',' func_par_decl
   53              | IDENTIFIER '[' ']' ',' func_par_decl
   54              | IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | IDENTIFIER ':' type ',' func_par_decl

   56 data: POSINT
   57     | REAL
   58     | STRING
   59     | KW_TRUE
   60     | KW_FALSE
   61     | ARRAY

   62 decl_const: ',' decl_const
   63           | IDENTIFIER ASSIGN data decl_const
   64           | IDENTIFIER ARRAY ASSIGN data decl_const
   65           | ':' const_type

   66 decl: %empty
   67     | ',' decl
   68     | IDENTIFIER decl
   69     | IDENTIFIER ARRAY decl
   70     | IDENTIFIER ARRAY ASSIGN data decl
   71     | IDENTIFIER ASSIGN data decl
   72     | ':' type

   73 expr: POSINT
   74     | REAL
   75     | IDENTIFIER
   76     | IDENTIFIER ARRAY
   77     | func_call
   78     | '(' expr ')'
   79     | '+' expr
   80     | '-' expr
   81     | KW_NOT expr
   82     | expr '+' expr
   83     | expr '-' expr
   84     | expr '*' expr
   85     | expr '/' expr
   86     | expr '%' expr
   87     | expr '=' expr
   88     | expr '<' expr
   89     | expr KW_NOT_EQL expr
   90     | expr KW_LESS_EQL expr
   91     | expr KW_OR expr
   92     | expr KW_AND expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 86
'(' (40) 9 10 11 12 13 14 15 41 42 78
')' (41) 9 10 11 12 13 14 15 41 42 78
'*' (42) 84
'+' (43) 79 82
',' (44) 44 52 53 54 55 62 67
'-' (45) 80 83
'/' (47) 85
':' (58) 9 41 50 51 54 55 65 72
';' (59) 5 10 11 12 13 14 15 16 17 18 19
'<' (60) 88
'=' (61) 87
'[' (91) 49 50 53 54
']' (93) 49 50 53 54
'{' (123) 9 41
'}' (125) 9 41
error (256)
IDENTIFIER (258) 13 14 15 18 41 42 48 49 50 51 52 53 54 55 63 64 68
    69 70 71 75 76
POSINT (259) 56 73
REAL (260) 57 74
STRING (261) 58
ARRAY (262) 61 64 69 70 76
ASSIGN (263) 9 18 41 63 64 70 71
KW_INT (264) 9 30 35
KW_REAL (265) 31 36
KW_BOOL (266) 32 37
KW_STRING (267) 33 38
KW_MAIN_ASSIGN (268) 9
KW_IF (269) 20
KW_THEN (270) 27
KW_ELSE (271) 29
KW_AND (272) 92
KW_OR (273) 91
KW_NOT (274) 81
KW_NOT_EQL (275) 89
KW_LESS_EQL (276) 90
KW_FI (277) 20
KW_WHILE (278) 21
KW_LOOP (279) 21
KW_POOL (280) 21
KW_CONST (281) 5 9 41
KW_LET (282) 17
KW_RETURN (283) 46
KW_START (284) 9
KW_TRUE (285) 59
KW_FALSE (286) 60
F_readS (287) 10
F_readI (288) 11
F_readR (289) 12
F_writeS (290) 13
F_writeI (291) 14
F_writeR (292) 15
"[]" (293) 34


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
input (56)
    on left: 1 2, on right: 0
part3 (57)
    on left: 3 4, on right: 2 4
body (58)
    on left: 5 6 7 8 9, on right: 4
defined_func (59)
    on left: 10 11 12 13 14 15, on right: 8
commands (60)
    on left: 16 17 18 19 20 21, on right: 7 22 23 24 25 28 40
main_body (61)
    on left: 22 23, on right: 9 23
while_state (62)
    on left: 24 25, on right: 21 25
if_state (63)
    on left: 26 27 28 29, on right: 20 27 28 29
type (64)
    on left: 30 31 32 33 34, on right: 34 41 50 51 54 55 72
const_type (65)
    on left: 35 36 37 38, on right: 65
func_body (66)
    on left: 39 40, on right: 40 41
func_decl (67)
    on left: 41, on right: 6
func_call (68)
    on left: 42, on right: 16 77
func_param (69)
    on left: 43 44 45, on right: 42 44
return_expr (70)
    on left: 46, on right: 19
func_par_decl (71)
    on left: 47 48 49 50 51 52 53 54 55, on right: 41 50 51 52 53 54
    55
data (72)
    on left: 56 57 58 59 60 61, on right: 63 64 70 71
decl_const (73)
    on left: 62 63 64 65, on right: 5 62 63 64
decl (74)
    on left: 66 67 68 69 70 71 72, on right: 17 67 68 69 70 71
expr (75)
    on left: 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
    91 92, on right: 18 21 27 44 45 46 78 79 80 81 82 83 84 85 86 87
    88 89 90 91 92


State 0

    0 $accept: . input $end
    1 input: . %empty  [$end]
    2      | . part3
    3 part3: . %empty  [$end, IDENTIFIER, KW_IF, KW_WHILE, KW_CONST, KW_LET, KW_RETURN, F_readS, F_readI, F_readR, F_writeS, F_writeI, F_writeR]
    4      | . part3 body

    $end      reduce using rule 1 (input)
    $end      [reduce using rule 3 (part3)]
    $default  reduce using rule 3 (part3)

    input  go to state 1
    part3  go to state 2


State 1

    0 $accept: input . $end

    $end  shift, and go to state 3


State 2

    2 input: part3 .  [$end]
    4 part3: part3 . body
    5 body: . KW_CONST decl_const ';'
    6     | . func_decl
    7     | . commands
    8     | . defined_func
    9     | . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'
   10 defined_func: . F_readS '(' ')' ';'
   11             | . F_readI '(' ')' ';'
   12             | . F_readR '(' ')' ';'
   13             | . F_writeS '(' IDENTIFIER ')' ';'
   14             | . F_writeI '(' IDENTIFIER ')' ';'
   15             | . F_writeR '(' IDENTIFIER ')' ';'
   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   41 func_decl: . KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}'
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_WHILE    shift, and go to state 6
    KW_CONST    shift, and go to state 7
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9
    F_readS     shift, and go to state 10
    F_readI     shift, and go to state 11
    F_readR     shift, and go to state 12
    F_writeS    shift, and go to state 13
    F_writeI    shift, and go to state 14
    F_writeR    shift, and go to state 15

    $default  reduce using rule 2 (input)

    body          go to state 16
    defined_func  go to state 17
    commands      go to state 18
    func_decl     go to state 19
    func_call     go to state 20
    return_expr   go to state 21


State 3

    0 $accept: input $end .

    $default  accept


State 4

   18 commands: IDENTIFIER . ASSIGN expr ';'
   42 func_call: IDENTIFIER . '(' func_param ')'

    ASSIGN  shift, and go to state 22
    '('     shift, and go to state 23


State 5

   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   20         | KW_IF . if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   26 if_state: . %empty  [KW_FI]
   27         | . expr KW_THEN if_state
   28         | . commands if_state
   29         | . KW_ELSE if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 24
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_IF       shift, and go to state 5
    KW_ELSE     shift, and go to state 27
    KW_NOT      shift, and go to state 28
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    $default  reduce using rule 26 (if_state)

    commands     go to state 32
    if_state     go to state 33
    func_call    go to state 34
    return_expr  go to state 21
    expr         go to state 35


State 6

   21 commands: KW_WHILE . expr KW_LOOP while_state KW_POOL
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 38


State 7

    5 body: KW_CONST . decl_const ';'
    9     | KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'
   41 func_decl: KW_CONST . IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}'
   62 decl_const: . ',' decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 39
    KW_START    shift, and go to state 40
    ':'         shift, and go to state 41
    ','         shift, and go to state 42

    decl_const  go to state 43


State 8

   17 commands: KW_LET . decl ';'
   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 44
    ':'         shift, and go to state 45
    ','         shift, and go to state 46

    $default  reduce using rule 66 (decl)

    decl  go to state 47


State 9

   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: KW_RETURN . expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 48


State 10

   10 defined_func: F_readS . '(' ')' ';'

    '('  shift, and go to state 49


State 11

   11 defined_func: F_readI . '(' ')' ';'

    '('  shift, and go to state 50


State 12

   12 defined_func: F_readR . '(' ')' ';'

    '('  shift, and go to state 51


State 13

   13 defined_func: F_writeS . '(' IDENTIFIER ')' ';'

    '('  shift, and go to state 52


State 14

   14 defined_func: F_writeI . '(' IDENTIFIER ')' ';'

    '('  shift, and go to state 53


State 15

   15 defined_func: F_writeR . '(' IDENTIFIER ')' ';'

    '('  shift, and go to state 54


State 16

    4 part3: part3 body .

    $default  reduce using rule 4 (part3)


State 17

    8 body: defined_func .

    $default  reduce using rule 8 (body)


State 18

    7 body: commands .

    $default  reduce using rule 7 (body)


State 19

    6 body: func_decl .

    $default  reduce using rule 6 (body)


State 20

   16 commands: func_call . ';'

    ';'  shift, and go to state 55


State 21

   19 commands: return_expr . ';'

    ';'  shift, and go to state 56


State 22

   18 commands: IDENTIFIER ASSIGN . expr ';'
   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 57


State 23

   42 func_call: . IDENTIFIER '(' func_param ')'
   42          | IDENTIFIER '(' . func_param ')'
   43 func_param: . %empty  [')']
   44           | . expr ',' func_param
   45           | . expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    $default  reduce using rule 43 (func_param)

    func_call   go to state 37
    func_param  go to state 58
    expr        go to state 59


State 24

   18 commands: IDENTIFIER . ASSIGN expr ';'
   42 func_call: IDENTIFIER . '(' func_param ')'
   75 expr: IDENTIFIER .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, '=', '<', '-', '+', '*', '/', '%']
   76     | IDENTIFIER . ARRAY

    ARRAY   shift, and go to state 60
    ASSIGN  shift, and go to state 22
    '('     shift, and go to state 23

    $default  reduce using rule 75 (expr)


State 25

   73 expr: POSINT .

    $default  reduce using rule 73 (expr)


State 26

   74 expr: REAL .

    $default  reduce using rule 74 (expr)


State 27

   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   26 if_state: . %empty  [KW_FI]
   27         | . expr KW_THEN if_state
   28         | . commands if_state
   29         | . KW_ELSE if_state
   29         | KW_ELSE . if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 24
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_IF       shift, and go to state 5
    KW_ELSE     shift, and go to state 27
    KW_NOT      shift, and go to state 28
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    $default  reduce using rule 26 (if_state)

    commands     go to state 32
    if_state     go to state 61
    func_call    go to state 34
    return_expr  go to state 21
    expr         go to state 35


State 28

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   81     | KW_NOT . expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 62


State 29

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   80     | '-' . expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 63


State 30

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   79     | '+' . expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 64


State 31

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   78     | '(' . expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 65


State 32

   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   26 if_state: . %empty  [KW_FI]
   27         | . expr KW_THEN if_state
   28         | . commands if_state
   28         | commands . if_state
   29         | . KW_ELSE if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 24
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_IF       shift, and go to state 5
    KW_ELSE     shift, and go to state 27
    KW_NOT      shift, and go to state 28
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    $default  reduce using rule 26 (if_state)

    commands     go to state 32
    if_state     go to state 66
    func_call    go to state 34
    return_expr  go to state 21
    expr         go to state 35


State 33

   20 commands: KW_IF if_state . KW_FI

    KW_FI  shift, and go to state 67


State 34

   16 commands: func_call . ';'
   77 expr: func_call .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, '=', '<', '-', '+', '*', '/', '%']

    ';'  shift, and go to state 55

    $default  reduce using rule 77 (expr)


State 35

   27 if_state: expr . KW_THEN if_state
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_THEN      shift, and go to state 68
    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT_EQL   shift, and go to state 71
    KW_LESS_EQL  shift, and go to state 72
    '='          shift, and go to state 73
    '<'          shift, and go to state 74
    '-'          shift, and go to state 75
    '+'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79


State 36

   42 func_call: IDENTIFIER . '(' func_param ')'
   75 expr: IDENTIFIER .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   76     | IDENTIFIER . ARRAY

    ARRAY  shift, and go to state 60
    '('    shift, and go to state 23

    $default  reduce using rule 75 (expr)


State 37

   77 expr: func_call .

    $default  reduce using rule 77 (expr)


State 38

   21 commands: KW_WHILE expr . KW_LOOP while_state KW_POOL
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT_EQL   shift, and go to state 71
    KW_LESS_EQL  shift, and go to state 72
    KW_LOOP      shift, and go to state 80
    '='          shift, and go to state 73
    '<'          shift, and go to state 74
    '-'          shift, and go to state 75
    '+'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79


State 39

   41 func_decl: KW_CONST IDENTIFIER . ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}'
   63 decl_const: IDENTIFIER . ASSIGN data decl_const
   64           | IDENTIFIER . ARRAY ASSIGN data decl_const

    ARRAY   shift, and go to state 81
    ASSIGN  shift, and go to state 82


State 40

    9 body: KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    ASSIGN  shift, and go to state 83


State 41

   35 const_type: . KW_INT
   36           | . KW_REAL
   37           | . KW_BOOL
   38           | . KW_STRING
   65 decl_const: ':' . const_type

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87

    const_type  go to state 88


State 42

   62 decl_const: . ',' decl_const
   62           | ',' . decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 89
    ':'         shift, and go to state 41
    ','         shift, and go to state 42

    decl_const  go to state 90


State 43

    5 body: KW_CONST decl_const . ';'

    ';'  shift, and go to state 91


State 44

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   68     | IDENTIFIER . decl
   69     | . IDENTIFIER ARRAY decl
   69     | IDENTIFIER . ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   70     | IDENTIFIER . ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   71     | IDENTIFIER . ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 44
    ARRAY       shift, and go to state 92
    ASSIGN      shift, and go to state 93
    ':'         shift, and go to state 45
    ','         shift, and go to state 46

    $default  reduce using rule 66 (decl)

    decl  go to state 94


State 45

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   72 decl: ':' . type

    KW_INT     shift, and go to state 95
    KW_REAL    shift, and go to state 96
    KW_BOOL    shift, and go to state 97
    KW_STRING  shift, and go to state 98
    "[]"       shift, and go to state 99

    type  go to state 100


State 46

   66 decl: . %empty  [';']
   67     | . ',' decl
   67     | ',' . decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 44
    ':'         shift, and go to state 45
    ','         shift, and go to state 46

    $default  reduce using rule 66 (decl)

    decl  go to state 101


State 47

   17 commands: KW_LET decl . ';'

    ';'  shift, and go to state 102


State 48

   46 return_expr: KW_RETURN expr .  [';']
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT_EQL   shift, and go to state 71
    KW_LESS_EQL  shift, and go to state 72
    '='          shift, and go to state 73
    '<'          shift, and go to state 74
    '-'          shift, and go to state 75
    '+'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79

    $default  reduce using rule 46 (return_expr)


State 49

   10 defined_func: F_readS '(' . ')' ';'

    ')'  shift, and go to state 103


State 50

   11 defined_func: F_readI '(' . ')' ';'

    ')'  shift, and go to state 104


State 51

   12 defined_func: F_readR '(' . ')' ';'

    ')'  shift, and go to state 105


State 52

   13 defined_func: F_writeS '(' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 106


State 53

   14 defined_func: F_writeI '(' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 107


State 54

   15 defined_func: F_writeR '(' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 108


State 55

   16 commands: func_call ';' .

    $default  reduce using rule 16 (commands)


State 56

   19 commands: return_expr ';' .

    $default  reduce using rule 19 (commands)


State 57

   18 commands: IDENTIFIER ASSIGN expr . ';'
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT_EQL   shift, and go to state 71
    KW_LESS_EQL  shift, and go to state 72
    '='          shift, and go to state 73
    '<'          shift, and go to state 74
    '-'          shift, and go to state 75
    '+'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    ';'          shift, and go to state 109


State 58

   42 func_call: IDENTIFIER '(' func_param . ')'

    ')'  shift, and go to state 110


State 59

   44 func_param: expr . ',' func_param
   45           | expr .  [')']
   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT_EQL   shift, and go to state 71
    KW_LESS_EQL  shift, and go to state 72
    '='          shift, and go to state 73
    '<'          shift, and go to state 74
    '-'          shift, and go to state 75
    '+'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    ','          shift, and go to state 111

    $default  reduce using rule 45 (func_param)


State 60

   76 expr: IDENTIFIER ARRAY .

    $default  reduce using rule 76 (expr)


State 61

   29 if_state: KW_ELSE if_state .

    $default  reduce using rule 29 (if_state)


State 62

   81 expr: KW_NOT expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   82     | expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    $default  reduce using rule 81 (expr)

    Conflict between rule 81 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 81 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 81 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < KW_NOT).
    Conflict between rule 81 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < KW_NOT).
    Conflict between rule 81 and token '=' resolved as reduce ('=' < KW_NOT).
    Conflict between rule 81 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 81 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 81 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 81 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 81 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 81 and token '%' resolved as reduce ('%' < KW_NOT).


State 63

   80 expr: '-' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   82     | expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 80 (expr)

    Conflict between rule 80 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 80 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 80 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '-').
    Conflict between rule 80 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '-').
    Conflict between rule 80 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 80 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 80 and token '-' resolved as reduce (%left '-').
    Conflict between rule 80 and token '+' resolved as reduce (%left '+').
    Conflict between rule 80 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 80 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 80 and token '%' resolved as shift ('-' < '%').


State 64

   79 expr: '+' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   82     | expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 79 (expr)

    Conflict between rule 79 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 79 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 79 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '+').
    Conflict between rule 79 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '+').
    Conflict between rule 79 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 79 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 79 and token '-' resolved as reduce (%left '-').
    Conflict between rule 79 and token '+' resolved as reduce (%left '+').
    Conflict between rule 79 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 79 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 79 and token '%' resolved as shift ('+' < '%').


State 65

   78 expr: '(' expr . ')'
   82     | expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT_EQL   shift, and go to state 71
    KW_LESS_EQL  shift, and go to state 72
    '='          shift, and go to state 73
    '<'          shift, and go to state 74
    '-'          shift, and go to state 75
    '+'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    ')'          shift, and go to state 112


State 66

   28 if_state: commands if_state .

    $default  reduce using rule 28 (if_state)


State 67

   20 commands: KW_IF if_state KW_FI .

    $default  reduce using rule 20 (commands)


State 68

   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   26 if_state: . %empty  [KW_FI]
   27         | . expr KW_THEN if_state
   27         | expr KW_THEN . if_state
   28         | . commands if_state
   29         | . KW_ELSE if_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 24
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_IF       shift, and go to state 5
    KW_ELSE     shift, and go to state 27
    KW_NOT      shift, and go to state 28
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    $default  reduce using rule 26 (if_state)

    commands     go to state 32
    if_state     go to state 113
    func_call    go to state 34
    return_expr  go to state 21
    expr         go to state 35


State 69

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr
   92     | expr KW_AND . expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 114


State 70

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   91     | expr KW_OR . expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 115


State 71

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   89     | expr KW_NOT_EQL . expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 116


State 72

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   90     | expr KW_LESS_EQL . expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 117


State 73

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   87     | expr '=' . expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 118


State 74

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   88     | expr '<' . expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 119


State 75

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   83     | expr '-' . expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 120


State 76

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   82     | expr '+' . expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 121


State 77

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   84     | expr '*' . expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 122


State 78

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   85     | expr '/' . expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 123


State 79

   42 func_call: . IDENTIFIER '(' func_param ')'
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   86     | expr '%' . expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    func_call  go to state 37
    expr       go to state 124


State 80

   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   21         | KW_WHILE expr KW_LOOP . while_state KW_POOL
   24 while_state: . commands
   25            | . commands while_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9

    commands     go to state 125
    while_state  go to state 126
    func_call    go to state 20
    return_expr  go to state 21


State 81

   64 decl_const: IDENTIFIER ARRAY . ASSIGN data decl_const

    ASSIGN  shift, and go to state 127


State 82

   41 func_decl: KW_CONST IDENTIFIER ASSIGN . '(' func_par_decl ')' ':' type '{' func_body '}'
   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   63 decl_const: IDENTIFIER ASSIGN . data decl_const

    POSINT    shift, and go to state 128
    REAL      shift, and go to state 129
    STRING    shift, and go to state 130
    ARRAY     shift, and go to state 131
    KW_TRUE   shift, and go to state 132
    KW_FALSE  shift, and go to state 133
    '('       shift, and go to state 134

    data  go to state 135


State 83

    9 body: KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    '('  shift, and go to state 136


State 84

   35 const_type: KW_INT .

    $default  reduce using rule 35 (const_type)


State 85

   36 const_type: KW_REAL .

    $default  reduce using rule 36 (const_type)


State 86

   37 const_type: KW_BOOL .

    $default  reduce using rule 37 (const_type)


State 87

   38 const_type: KW_STRING .

    $default  reduce using rule 38 (const_type)


State 88

   65 decl_const: ':' const_type .

    $default  reduce using rule 65 (decl_const)


State 89

   63 decl_const: IDENTIFIER . ASSIGN data decl_const
   64           | IDENTIFIER . ARRAY ASSIGN data decl_const

    ARRAY   shift, and go to state 81
    ASSIGN  shift, and go to state 137


State 90

   62 decl_const: ',' decl_const .

    $default  reduce using rule 62 (decl_const)


State 91

    5 body: KW_CONST decl_const ';' .

    $default  reduce using rule 5 (body)


State 92

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   69     | IDENTIFIER ARRAY . decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   70     | IDENTIFIER ARRAY . ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 44
    ASSIGN      shift, and go to state 138
    ':'         shift, and go to state 45
    ','         shift, and go to state 46

    $default  reduce using rule 66 (decl)

    decl  go to state 139


State 93

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   71 decl: IDENTIFIER ASSIGN . data decl

    POSINT    shift, and go to state 128
    REAL      shift, and go to state 129
    STRING    shift, and go to state 130
    ARRAY     shift, and go to state 131
    KW_TRUE   shift, and go to state 132
    KW_FALSE  shift, and go to state 133

    data  go to state 140


State 94

   68 decl: IDENTIFIER decl .

    $default  reduce using rule 68 (decl)


State 95

   30 type: KW_INT .

    $default  reduce using rule 30 (type)


State 96

   31 type: KW_REAL .

    $default  reduce using rule 31 (type)


State 97

   32 type: KW_BOOL .

    $default  reduce using rule 32 (type)


State 98

   33 type: KW_STRING .

    $default  reduce using rule 33 (type)


State 99

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   34     | "[]" . type

    KW_INT     shift, and go to state 95
    KW_REAL    shift, and go to state 96
    KW_BOOL    shift, and go to state 97
    KW_STRING  shift, and go to state 98
    "[]"       shift, and go to state 99

    type  go to state 141


State 100

   72 decl: ':' type .

    $default  reduce using rule 72 (decl)


State 101

   67 decl: ',' decl .

    $default  reduce using rule 67 (decl)


State 102

   17 commands: KW_LET decl ';' .

    $default  reduce using rule 17 (commands)


State 103

   10 defined_func: F_readS '(' ')' . ';'

    ';'  shift, and go to state 142


State 104

   11 defined_func: F_readI '(' ')' . ';'

    ';'  shift, and go to state 143


State 105

   12 defined_func: F_readR '(' ')' . ';'

    ';'  shift, and go to state 144


State 106

   13 defined_func: F_writeS '(' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 145


State 107

   14 defined_func: F_writeI '(' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 146


State 108

   15 defined_func: F_writeR '(' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 147


State 109

   18 commands: IDENTIFIER ASSIGN expr ';' .

    $default  reduce using rule 18 (commands)


State 110

   42 func_call: IDENTIFIER '(' func_param ')' .

    $default  reduce using rule 42 (func_call)


State 111

   42 func_call: . IDENTIFIER '(' func_param ')'
   43 func_param: . %empty  [')']
   44           | . expr ',' func_param
   44           | expr ',' . func_param
   45           | . expr
   73 expr: . POSINT
   74     | . REAL
   75     | . IDENTIFIER
   76     | . IDENTIFIER ARRAY
   77     | . func_call
   78     | . '(' expr ')'
   79     | . '+' expr
   80     | . '-' expr
   81     | . KW_NOT expr
   82     | . expr '+' expr
   83     | . expr '-' expr
   84     | . expr '*' expr
   85     | . expr '/' expr
   86     | . expr '%' expr
   87     | . expr '=' expr
   88     | . expr '<' expr
   89     | . expr KW_NOT_EQL expr
   90     | . expr KW_LESS_EQL expr
   91     | . expr KW_OR expr
   92     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 36
    POSINT      shift, and go to state 25
    REAL        shift, and go to state 26
    KW_NOT      shift, and go to state 28
    '-'         shift, and go to state 29
    '+'         shift, and go to state 30
    '('         shift, and go to state 31

    $default  reduce using rule 43 (func_param)

    func_call   go to state 37
    func_param  go to state 148
    expr        go to state 59


State 112

   78 expr: '(' expr ')' .

    $default  reduce using rule 78 (expr)


State 113

   27 if_state: expr KW_THEN if_state .

    $default  reduce using rule 27 (if_state)


State 114

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr
   92     | expr KW_AND expr .  [KW_THEN, KW_AND, KW_OR, KW_LOOP, ';', ')', ',']

    KW_NOT_EQL   shift, and go to state 71
    KW_LESS_EQL  shift, and go to state 72
    '='          shift, and go to state 73
    '<'          shift, and go to state 74
    '-'          shift, and go to state 75
    '+'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79

    $default  reduce using rule 92 (expr)

    Conflict between rule 92 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 92 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 92 and token KW_NOT_EQL resolved as shift (KW_AND < KW_NOT_EQL).
    Conflict between rule 92 and token KW_LESS_EQL resolved as shift (KW_AND < KW_LESS_EQL).
    Conflict between rule 92 and token '=' resolved as shift (KW_AND < '=').
    Conflict between rule 92 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 92 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 92 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 92 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 92 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 92 and token '%' resolved as shift (KW_AND < '%').


State 115

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   91     | expr KW_OR expr .  [KW_THEN, KW_OR, KW_LOOP, ';', ')', ',']
   92     | expr . KW_AND expr

    KW_AND       shift, and go to state 69
    KW_NOT_EQL   shift, and go to state 71
    KW_LESS_EQL  shift, and go to state 72
    '='          shift, and go to state 73
    '<'          shift, and go to state 74
    '-'          shift, and go to state 75
    '+'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79

    $default  reduce using rule 91 (expr)

    Conflict between rule 91 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 91 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 91 and token KW_NOT_EQL resolved as shift (KW_OR < KW_NOT_EQL).
    Conflict between rule 91 and token KW_LESS_EQL resolved as shift (KW_OR < KW_LESS_EQL).
    Conflict between rule 91 and token '=' resolved as shift (KW_OR < '=').
    Conflict between rule 91 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 91 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 91 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 91 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 91 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 91 and token '%' resolved as shift (KW_OR < '%').


State 116

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   89     | expr KW_NOT_EQL expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '-'  shift, and go to state 75
    '+'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 89 (expr)

    Conflict between rule 89 and token KW_AND resolved as reduce (KW_AND < KW_NOT_EQL).
    Conflict between rule 89 and token KW_OR resolved as reduce (KW_OR < KW_NOT_EQL).
    Conflict between rule 89 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 89 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 89 and token '=' resolved as reduce (%left '=').
    Conflict between rule 89 and token '<' resolved as reduce (%left '<').
    Conflict between rule 89 and token '-' resolved as shift (KW_NOT_EQL < '-').
    Conflict between rule 89 and token '+' resolved as shift (KW_NOT_EQL < '+').
    Conflict between rule 89 and token '*' resolved as shift (KW_NOT_EQL < '*').
    Conflict between rule 89 and token '/' resolved as shift (KW_NOT_EQL < '/').
    Conflict between rule 89 and token '%' resolved as shift (KW_NOT_EQL < '%').


State 117

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   90     | expr KW_LESS_EQL expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '-'  shift, and go to state 75
    '+'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 90 (expr)

    Conflict between rule 90 and token KW_AND resolved as reduce (KW_AND < KW_LESS_EQL).
    Conflict between rule 90 and token KW_OR resolved as reduce (KW_OR < KW_LESS_EQL).
    Conflict between rule 90 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 90 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 90 and token '=' resolved as reduce (%left '=').
    Conflict between rule 90 and token '<' resolved as reduce (%left '<').
    Conflict between rule 90 and token '-' resolved as shift (KW_LESS_EQL < '-').
    Conflict between rule 90 and token '+' resolved as shift (KW_LESS_EQL < '+').
    Conflict between rule 90 and token '*' resolved as shift (KW_LESS_EQL < '*').
    Conflict between rule 90 and token '/' resolved as shift (KW_LESS_EQL < '/').
    Conflict between rule 90 and token '%' resolved as shift (KW_LESS_EQL < '%').


State 118

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   87     | expr '=' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '-'  shift, and go to state 75
    '+'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 87 (expr)

    Conflict between rule 87 and token KW_AND resolved as reduce (KW_AND < '=').
    Conflict between rule 87 and token KW_OR resolved as reduce (KW_OR < '=').
    Conflict between rule 87 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 87 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 87 and token '=' resolved as reduce (%left '=').
    Conflict between rule 87 and token '<' resolved as reduce (%left '<').
    Conflict between rule 87 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 87 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 87 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 87 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 87 and token '%' resolved as shift ('=' < '%').


State 119

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   88     | expr '<' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '-'  shift, and go to state 75
    '+'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 88 (expr)

    Conflict between rule 88 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 88 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 88 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 88 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 88 and token '=' resolved as reduce (%left '=').
    Conflict between rule 88 and token '<' resolved as reduce (%left '<').
    Conflict between rule 88 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 88 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 88 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 88 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 88 and token '%' resolved as shift ('<' < '%').


State 120

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   83     | expr '-' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 83 (expr)

    Conflict between rule 83 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 83 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 83 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '-').
    Conflict between rule 83 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '-').
    Conflict between rule 83 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 83 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 83 and token '-' resolved as reduce (%left '-').
    Conflict between rule 83 and token '+' resolved as reduce (%left '+').
    Conflict between rule 83 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 83 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 83 and token '%' resolved as shift ('-' < '%').


State 121

   82 expr: expr . '+' expr
   82     | expr '+' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 82 (expr)

    Conflict between rule 82 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 82 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 82 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '+').
    Conflict between rule 82 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '+').
    Conflict between rule 82 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 82 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 82 and token '-' resolved as reduce (%left '-').
    Conflict between rule 82 and token '+' resolved as reduce (%left '+').
    Conflict between rule 82 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 82 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 82 and token '%' resolved as shift ('+' < '%').


State 122

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   84     | expr '*' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   85     | expr . '/' expr
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    $default  reduce using rule 84 (expr)

    Conflict between rule 84 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 84 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 84 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '*').
    Conflict between rule 84 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '*').
    Conflict between rule 84 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 84 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 84 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 84 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 84 and token '*' resolved as reduce (%left '*').
    Conflict between rule 84 and token '/' resolved as reduce (%left '/').
    Conflict between rule 84 and token '%' resolved as reduce (%left '%').


State 123

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   85     | expr '/' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   86     | expr . '%' expr
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    $default  reduce using rule 85 (expr)

    Conflict between rule 85 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 85 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 85 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '/').
    Conflict between rule 85 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '/').
    Conflict between rule 85 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 85 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 85 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 85 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 85 and token '*' resolved as reduce (%left '*').
    Conflict between rule 85 and token '/' resolved as reduce (%left '/').
    Conflict between rule 85 and token '%' resolved as reduce (%left '%').


State 124

   82 expr: expr . '+' expr
   83     | expr . '-' expr
   84     | expr . '*' expr
   85     | expr . '/' expr
   86     | expr . '%' expr
   86     | expr '%' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   87     | expr . '=' expr
   88     | expr . '<' expr
   89     | expr . KW_NOT_EQL expr
   90     | expr . KW_LESS_EQL expr
   91     | expr . KW_OR expr
   92     | expr . KW_AND expr

    $default  reduce using rule 86 (expr)

    Conflict between rule 86 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 86 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 86 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '%').
    Conflict between rule 86 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '%').
    Conflict between rule 86 and token '=' resolved as reduce ('=' < '%').
    Conflict between rule 86 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 86 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 86 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 86 and token '*' resolved as reduce (%left '*').
    Conflict between rule 86 and token '/' resolved as reduce (%left '/').
    Conflict between rule 86 and token '%' resolved as reduce (%left '%').


State 125

   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   24 while_state: . commands
   24            | commands .  [KW_POOL]
   25            | . commands while_state
   25            | commands . while_state
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9

    $default  reduce using rule 24 (while_state)

    commands     go to state 125
    while_state  go to state 149
    func_call    go to state 20
    return_expr  go to state 21


State 126

   21 commands: KW_WHILE expr KW_LOOP while_state . KW_POOL

    KW_POOL  shift, and go to state 150


State 127

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   64 decl_const: IDENTIFIER ARRAY ASSIGN . data decl_const

    POSINT    shift, and go to state 128
    REAL      shift, and go to state 129
    STRING    shift, and go to state 130
    ARRAY     shift, and go to state 131
    KW_TRUE   shift, and go to state 132
    KW_FALSE  shift, and go to state 133

    data  go to state 151


State 128

   56 data: POSINT .

    $default  reduce using rule 56 (data)


State 129

   57 data: REAL .

    $default  reduce using rule 57 (data)


State 130

   58 data: STRING .

    $default  reduce using rule 58 (data)


State 131

   61 data: ARRAY .

    $default  reduce using rule 61 (data)


State 132

   59 data: KW_TRUE .

    $default  reduce using rule 59 (data)


State 133

   60 data: KW_FALSE .

    $default  reduce using rule 60 (data)


State 134

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' . func_par_decl ')' ':' type '{' func_body '}'
   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 152

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 153


State 135

   62 decl_const: . ',' decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   63           | IDENTIFIER ASSIGN data . decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 89
    ':'         shift, and go to state 41
    ','         shift, and go to state 42

    decl_const  go to state 154


State 136

    9 body: KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    ')'  shift, and go to state 155


State 137

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   63 decl_const: IDENTIFIER ASSIGN . data decl_const

    POSINT    shift, and go to state 128
    REAL      shift, and go to state 129
    STRING    shift, and go to state 130
    ARRAY     shift, and go to state 131
    KW_TRUE   shift, and go to state 132
    KW_FALSE  shift, and go to state 133

    data  go to state 135


State 138

   56 data: . POSINT
   57     | . REAL
   58     | . STRING
   59     | . KW_TRUE
   60     | . KW_FALSE
   61     | . ARRAY
   70 decl: IDENTIFIER ARRAY ASSIGN . data decl

    POSINT    shift, and go to state 128
    REAL      shift, and go to state 129
    STRING    shift, and go to state 130
    ARRAY     shift, and go to state 131
    KW_TRUE   shift, and go to state 132
    KW_FALSE  shift, and go to state 133

    data  go to state 156


State 139

   69 decl: IDENTIFIER ARRAY decl .

    $default  reduce using rule 69 (decl)


State 140

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   71     | . IDENTIFIER ASSIGN data decl
   71     | IDENTIFIER ASSIGN data . decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 44
    ':'         shift, and go to state 45
    ','         shift, and go to state 46

    $default  reduce using rule 66 (decl)

    decl  go to state 157


State 141

   34 type: "[]" type .

    $default  reduce using rule 34 (type)


State 142

   10 defined_func: F_readS '(' ')' ';' .

    $default  reduce using rule 10 (defined_func)


State 143

   11 defined_func: F_readI '(' ')' ';' .

    $default  reduce using rule 11 (defined_func)


State 144

   12 defined_func: F_readR '(' ')' ';' .

    $default  reduce using rule 12 (defined_func)


State 145

   13 defined_func: F_writeS '(' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 158


State 146

   14 defined_func: F_writeI '(' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 159


State 147

   15 defined_func: F_writeR '(' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 160


State 148

   44 func_param: expr ',' func_param .

    $default  reduce using rule 44 (func_param)


State 149

   25 while_state: commands while_state .

    $default  reduce using rule 25 (while_state)


State 150

   21 commands: KW_WHILE expr KW_LOOP while_state KW_POOL .

    $default  reduce using rule 21 (commands)


State 151

   62 decl_const: . ',' decl_const
   63           | . IDENTIFIER ASSIGN data decl_const
   64           | . IDENTIFIER ARRAY ASSIGN data decl_const
   64           | IDENTIFIER ARRAY ASSIGN data . decl_const
   65           | . ':' const_type

    IDENTIFIER  shift, and go to state 89
    ':'         shift, and go to state 41
    ','         shift, and go to state 42

    decl_const  go to state 161


State 152

   48 func_par_decl: IDENTIFIER .  [')']
   49              | IDENTIFIER . '[' ']'
   50              | IDENTIFIER . '[' ']' ':' type func_par_decl
   51              | IDENTIFIER . ':' type func_par_decl
   52              | IDENTIFIER . ',' func_par_decl
   53              | IDENTIFIER . '[' ']' ',' func_par_decl
   54              | IDENTIFIER . '[' ']' ':' type ',' func_par_decl
   55              | IDENTIFIER . ':' type ',' func_par_decl

    ':'  shift, and go to state 162
    ','  shift, and go to state 163
    '['  shift, and go to state 164

    $default  reduce using rule 48 (func_par_decl)


State 153

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl . ')' ':' type '{' func_body '}'

    ')'  shift, and go to state 165


State 154

   63 decl_const: IDENTIFIER ASSIGN data decl_const .

    $default  reduce using rule 63 (decl_const)


State 155

    9 body: KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    ':'  shift, and go to state 166


State 156

   66 decl: . %empty  [';']
   67     | . ',' decl
   68     | . IDENTIFIER decl
   69     | . IDENTIFIER ARRAY decl
   70     | . IDENTIFIER ARRAY ASSIGN data decl
   70     | IDENTIFIER ARRAY ASSIGN data . decl
   71     | . IDENTIFIER ASSIGN data decl
   72     | . ':' type

    IDENTIFIER  shift, and go to state 44
    ':'         shift, and go to state 45
    ','         shift, and go to state 46

    $default  reduce using rule 66 (decl)

    decl  go to state 167


State 157

   71 decl: IDENTIFIER ASSIGN data decl .

    $default  reduce using rule 71 (decl)


State 158

   13 defined_func: F_writeS '(' IDENTIFIER ')' ';' .

    $default  reduce using rule 13 (defined_func)


State 159

   14 defined_func: F_writeI '(' IDENTIFIER ')' ';' .

    $default  reduce using rule 14 (defined_func)


State 160

   15 defined_func: F_writeR '(' IDENTIFIER ')' ';' .

    $default  reduce using rule 15 (defined_func)


State 161

   64 decl_const: IDENTIFIER ARRAY ASSIGN data decl_const .

    $default  reduce using rule 64 (decl_const)


State 162

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   51 func_par_decl: IDENTIFIER ':' . type func_par_decl
   55              | IDENTIFIER ':' . type ',' func_par_decl

    KW_INT     shift, and go to state 95
    KW_REAL    shift, and go to state 96
    KW_BOOL    shift, and go to state 97
    KW_STRING  shift, and go to state 98
    "[]"       shift, and go to state 99

    type  go to state 168


State 163

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   52              | IDENTIFIER ',' . func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 152

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 169


State 164

   49 func_par_decl: IDENTIFIER '[' . ']'
   50              | IDENTIFIER '[' . ']' ':' type func_par_decl
   53              | IDENTIFIER '[' . ']' ',' func_par_decl
   54              | IDENTIFIER '[' . ']' ':' type ',' func_par_decl

    ']'  shift, and go to state 170


State 165

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' . ':' type '{' func_body '}'

    ':'  shift, and go to state 171


State 166

    9 body: KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    KW_INT  shift, and go to state 172


State 167

   70 decl: IDENTIFIER ARRAY ASSIGN data decl .

    $default  reduce using rule 70 (decl)


State 168

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   51              | IDENTIFIER ':' type . func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl
   55              | IDENTIFIER ':' type . ',' func_par_decl

    IDENTIFIER  shift, and go to state 152
    ','         shift, and go to state 173

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 174


State 169

   52 func_par_decl: IDENTIFIER ',' func_par_decl .

    $default  reduce using rule 52 (func_par_decl)


State 170

   49 func_par_decl: IDENTIFIER '[' ']' .  [')']
   50              | IDENTIFIER '[' ']' . ':' type func_par_decl
   53              | IDENTIFIER '[' ']' . ',' func_par_decl
   54              | IDENTIFIER '[' ']' . ':' type ',' func_par_decl

    ':'  shift, and go to state 175
    ','  shift, and go to state 176

    $default  reduce using rule 49 (func_par_decl)


State 171

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' . type '{' func_body '}'

    KW_INT     shift, and go to state 95
    KW_REAL    shift, and go to state 96
    KW_BOOL    shift, and go to state 97
    KW_STRING  shift, and go to state 98
    "[]"       shift, and go to state 99

    type  go to state 177


State 172

    9 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . KW_MAIN_ASSIGN '{' main_body '}'

    KW_MAIN_ASSIGN  shift, and go to state 178


State 173

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl
   55              | IDENTIFIER ':' type ',' . func_par_decl

    IDENTIFIER  shift, and go to state 152

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 179


State 174

   51 func_par_decl: IDENTIFIER ':' type func_par_decl .

    $default  reduce using rule 51 (func_par_decl)


State 175

   30 type: . KW_INT
   31     | . KW_REAL
   32     | . KW_BOOL
   33     | . KW_STRING
   34     | . "[]" type
   50 func_par_decl: IDENTIFIER '[' ']' ':' . type func_par_decl
   54              | IDENTIFIER '[' ']' ':' . type ',' func_par_decl

    KW_INT     shift, and go to state 95
    KW_REAL    shift, and go to state 96
    KW_BOOL    shift, and go to state 97
    KW_STRING  shift, and go to state 98
    "[]"       shift, and go to state 99

    type  go to state 180


State 176

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   53              | IDENTIFIER '[' ']' ',' . func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 152

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 181


State 177

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type . '{' func_body '}'

    '{'  shift, and go to state 182


State 178

    9 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN . '{' main_body '}'

    '{'  shift, and go to state 183


State 179

   55 func_par_decl: IDENTIFIER ':' type ',' func_par_decl .

    $default  reduce using rule 55 (func_par_decl)


State 180

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   50              | IDENTIFIER '[' ']' ':' type . func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   54              | IDENTIFIER '[' ']' ':' type . ',' func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 152
    ','         shift, and go to state 184

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 185


State 181

   53 func_par_decl: IDENTIFIER '[' ']' ',' func_par_decl .

    $default  reduce using rule 53 (func_par_decl)


State 182

   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   39 func_body: . %empty  ['}']
   40          | . commands func_body
   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' . func_body '}'
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9

    $default  reduce using rule 39 (func_body)

    commands     go to state 186
    func_body    go to state 187
    func_call    go to state 20
    return_expr  go to state 21


State 183

    9 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' . main_body '}'
   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   22 main_body: . commands
   23          | . commands main_body
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9

    commands     go to state 188
    main_body    go to state 189
    func_call    go to state 20
    return_expr  go to state 21


State 184

   47 func_par_decl: . %empty  [')']
   48              | . IDENTIFIER
   49              | . IDENTIFIER '[' ']'
   50              | . IDENTIFIER '[' ']' ':' type func_par_decl
   51              | . IDENTIFIER ':' type func_par_decl
   52              | . IDENTIFIER ',' func_par_decl
   53              | . IDENTIFIER '[' ']' ',' func_par_decl
   54              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   54              | IDENTIFIER '[' ']' ':' type ',' . func_par_decl
   55              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 152

    $default  reduce using rule 47 (func_par_decl)

    func_par_decl  go to state 190


State 185

   50 func_par_decl: IDENTIFIER '[' ']' ':' type func_par_decl .

    $default  reduce using rule 50 (func_par_decl)


State 186

   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   39 func_body: . %empty  ['}']
   40          | . commands func_body
   40          | commands . func_body
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9

    $default  reduce using rule 39 (func_body)

    commands     go to state 186
    func_body    go to state 191
    func_call    go to state 20
    return_expr  go to state 21


State 187

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body . '}'

    '}'  shift, and go to state 192


State 188

   16 commands: . func_call ';'
   17         | . KW_LET decl ';'
   18         | . IDENTIFIER ASSIGN expr ';'
   19         | . return_expr ';'
   20         | . KW_IF if_state KW_FI
   21         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   22 main_body: . commands
   22          | commands .  ['}']
   23          | . commands main_body
   23          | commands . main_body
   42 func_call: . IDENTIFIER '(' func_param ')'
   46 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_WHILE    shift, and go to state 6
    KW_LET      shift, and go to state 8
    KW_RETURN   shift, and go to state 9

    $default  reduce using rule 22 (main_body)

    commands     go to state 188
    main_body    go to state 193
    func_call    go to state 20
    return_expr  go to state 21


State 189

    9 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body . '}'

    '}'  shift, and go to state 194


State 190

   54 func_par_decl: IDENTIFIER '[' ']' ':' type ',' func_par_decl .

    $default  reduce using rule 54 (func_par_decl)


State 191

   40 func_body: commands func_body .

    $default  reduce using rule 40 (func_body)


State 192

   41 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}' .

    $default  reduce using rule 41 (func_decl)


State 193

   23 main_body: commands main_body .

    $default  reduce using rule 23 (main_body)


State 194

    9 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}' .

    $default  reduce using rule 9 (body)
