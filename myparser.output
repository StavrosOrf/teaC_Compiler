Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input body

    3 body: KW_LET decl ';'
    4     | KW_CONST decl_const ';'
    5     | func_decl
    6     | commands
    7     | KW_CONST defined_func ";;;;"
    8     | KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    9 defined_func: KW_INT

   10 commands: func_call ';'
   11         | IDENTIFIER ASSIGN expr ';'
   12         | return_expr ';'
   13         | KW_IF if_state KW_FI
   14         | KW_WHILE expr KW_LOOP while_state KW_POOL

   15 main_body: commands
   16          | commands main_body

   17 while_state: commands
   18            | commands while_state

   19 if_state: %empty
   20         | expr KW_THEN if_state
   21         | commands if_state
   22         | KW_ELSE if_state

   23 type: KW_INT
   24     | KW_REAL
   25     | KW_BOOL
   26     | KW_STRING
   27     | "[]" type

   28 const_type: KW_INT
   29           | KW_REAL
   30           | KW_BOOL
   31           | KW_STRING

   32 func_body: %empty
   33          | KW_LET decl ';' func_body
   34          | commands func_body

   35 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}'

   36 func_call: IDENTIFIER '(' func_param ')'

   37 func_param: %empty
   38           | expr ',' func_param
   39           | expr

   40 return_expr: KW_RETURN expr

   41 func_par_decl: %empty
   42              | IDENTIFIER
   43              | IDENTIFIER '[' ']'
   44              | IDENTIFIER '[' ']' ':' type func_par_decl
   45              | IDENTIFIER ':' type func_par_decl
   46              | IDENTIFIER ',' func_par_decl
   47              | IDENTIFIER '[' ']' ',' func_par_decl
   48              | IDENTIFIER '[' ']' ':' type ',' func_par_decl
   49              | IDENTIFIER ':' type ',' func_par_decl

   50 data: POSINT
   51     | REAL
   52     | STRING
   53     | KW_TRUE
   54     | KW_FALSE
   55     | ARRAY

   56 decl_const: ',' decl_const
   57           | IDENTIFIER ASSIGN data decl_const
   58           | IDENTIFIER ARRAY ASSIGN data decl_const
   59           | ':' const_type

   60 decl: %empty
   61     | ',' decl
   62     | IDENTIFIER decl
   63     | IDENTIFIER ARRAY decl
   64     | IDENTIFIER ARRAY ASSIGN data decl
   65     | IDENTIFIER ASSIGN data decl
   66     | ':' type

   67 expr: POSINT
   68     | REAL
   69     | IDENTIFIER
   70     | IDENTIFIER ARRAY
   71     | func_call
   72     | '(' expr ')'
   73     | '+' expr
   74     | '-' expr
   75     | KW_NOT expr
   76     | expr '+' expr
   77     | expr '-' expr
   78     | expr '*' expr
   79     | expr '/' expr
   80     | expr '%' expr
   81     | expr '=' expr
   82     | expr '<' expr
   83     | expr KW_NOT_EQL expr
   84     | expr KW_LESS_EQL expr
   85     | expr KW_OR expr
   86     | expr KW_AND expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 80
'(' (40) 8 35 36 72
')' (41) 8 35 36 72
'*' (42) 78
'+' (43) 73 76
',' (44) 38 46 47 48 49 56 61
'-' (45) 74 77
'/' (47) 79
':' (58) 8 35 44 45 48 49 59 66
';' (59) 3 4 10 11 12 33
'<' (60) 82
'=' (61) 81
'[' (91) 43 44 47 48
']' (93) 43 44 47 48
'{' (123) 8 35
'}' (125) 8 35
error (256)
IDENTIFIER (258) 11 35 36 42 43 44 45 46 47 48 49 57 58 62 63 64 65
    69 70
POSINT (259) 50 67
REAL (260) 51 68
STRING (261) 52
ARRAY (262) 55 58 63 64 70
ASSIGN (263) 8 11 35 57 58 64 65
KW_INT (264) 8 9 23 28
KW_REAL (265) 24 29
KW_BOOL (266) 25 30
KW_STRING (267) 26 31
KW_MAIN_ASSIGN (268) 8
KW_IF (269) 13
KW_THEN (270) 20
KW_ELSE (271) 22
KW_AND (272) 86
KW_OR (273) 85
KW_NOT (274) 75
KW_NOT_EQL (275) 83
KW_LESS_EQL (276) 84
KW_FI (277) 13
KW_WHILE (278) 14
KW_LOOP (279) 14
KW_POOL (280) 14
KW_CONST (281) 4 7 8 35
KW_LET (282) 3 33
KW_RETURN (283) 40
KW_START (284) 8
KW_TRUE (285) 53
KW_FALSE (286) 54
";;;;" (287) 7
"[]" (288) 27


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
input (51)
    on left: 1 2, on right: 0 2
body (52)
    on left: 3 4 5 6 7 8, on right: 2
defined_func (53)
    on left: 9, on right: 7
commands (54)
    on left: 10 11 12 13 14, on right: 6 15 16 17 18 21 34
main_body (55)
    on left: 15 16, on right: 8 16
while_state (56)
    on left: 17 18, on right: 14 18
if_state (57)
    on left: 19 20 21 22, on right: 13 20 21 22
type (58)
    on left: 23 24 25 26 27, on right: 27 35 44 45 48 49 66
const_type (59)
    on left: 28 29 30 31, on right: 59
func_body (60)
    on left: 32 33 34, on right: 33 34 35
func_decl (61)
    on left: 35, on right: 5
func_call (62)
    on left: 36, on right: 10 71
func_param (63)
    on left: 37 38 39, on right: 36 38
return_expr (64)
    on left: 40, on right: 12
func_par_decl (65)
    on left: 41 42 43 44 45 46 47 48 49, on right: 35 44 45 46 47 48
    49
data (66)
    on left: 50 51 52 53 54 55, on right: 57 58 64 65
decl_const (67)
    on left: 56 57 58 59, on right: 4 56 57 58
decl (68)
    on left: 60 61 62 63 64 65 66, on right: 3 33 61 62 63 64 65
expr (69)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
    85 86, on right: 11 14 20 38 39 40 72 73 74 75 76 77 78 79 80 81
    82 83 84 85 86


State 0

    0 $accept: . input $end
    1 input: . %empty
    2      | . input body

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . body
    3 body: . KW_LET decl ';'
    4     | . KW_CONST decl_const ';'
    5     | . func_decl
    6     | . commands
    7     | . KW_CONST defined_func ";;;;"
    8     | . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'
   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   35 func_decl: . KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}'
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr

    $end        shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    KW_IF       shift, and go to state 4
    KW_WHILE    shift, and go to state 5
    KW_CONST    shift, and go to state 6
    KW_LET      shift, and go to state 7
    KW_RETURN   shift, and go to state 8

    body         go to state 9
    commands     go to state 10
    func_decl    go to state 11
    func_call    go to state 12
    return_expr  go to state 13


State 2

    0 $accept: input $end .

    $default  accept


State 3

   11 commands: IDENTIFIER . ASSIGN expr ';'
   36 func_call: IDENTIFIER . '(' func_param ')'

    ASSIGN  shift, and go to state 14
    '('     shift, and go to state 15


State 4

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   13         | KW_IF . if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   19 if_state: . %empty  [KW_FI]
   20         | . expr KW_THEN if_state
   21         | . commands if_state
   22         | . KW_ELSE if_state
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 16
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_IF       shift, and go to state 4
    KW_ELSE     shift, and go to state 19
    KW_NOT      shift, and go to state 20
    KW_WHILE    shift, and go to state 5
    KW_RETURN   shift, and go to state 8
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    $default  reduce using rule 19 (if_state)

    commands     go to state 24
    if_state     go to state 25
    func_call    go to state 26
    return_expr  go to state 13
    expr         go to state 27


State 5

   14 commands: KW_WHILE . expr KW_LOOP while_state KW_POOL
   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 30


State 6

    4 body: KW_CONST . decl_const ';'
    7     | KW_CONST . defined_func ";;;;"
    8     | KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'
    9 defined_func: . KW_INT
   35 func_decl: KW_CONST . IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}'
   56 decl_const: . ',' decl_const
   57           | . IDENTIFIER ASSIGN data decl_const
   58           | . IDENTIFIER ARRAY ASSIGN data decl_const
   59           | . ':' const_type

    IDENTIFIER  shift, and go to state 31
    KW_INT      shift, and go to state 32
    KW_START    shift, and go to state 33
    ':'         shift, and go to state 34
    ','         shift, and go to state 35

    defined_func  go to state 36
    decl_const    go to state 37


State 7

    3 body: KW_LET . decl ';'
   60 decl: . %empty  [';']
   61     | . ',' decl
   62     | . IDENTIFIER decl
   63     | . IDENTIFIER ARRAY decl
   64     | . IDENTIFIER ARRAY ASSIGN data decl
   65     | . IDENTIFIER ASSIGN data decl
   66     | . ':' type

    IDENTIFIER  shift, and go to state 38
    ':'         shift, and go to state 39
    ','         shift, and go to state 40

    $default  reduce using rule 60 (decl)

    decl  go to state 41


State 8

   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: KW_RETURN . expr
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 42


State 9

    2 input: input body .

    $default  reduce using rule 2 (input)


State 10

    6 body: commands .

    $default  reduce using rule 6 (body)


State 11

    5 body: func_decl .

    $default  reduce using rule 5 (body)


State 12

   10 commands: func_call . ';'

    ';'  shift, and go to state 43


State 13

   12 commands: return_expr . ';'

    ';'  shift, and go to state 44


State 14

   11 commands: IDENTIFIER ASSIGN . expr ';'
   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 45


State 15

   36 func_call: . IDENTIFIER '(' func_param ')'
   36          | IDENTIFIER '(' . func_param ')'
   37 func_param: . %empty  [')']
   38           | . expr ',' func_param
   39           | . expr
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    $default  reduce using rule 37 (func_param)

    func_call   go to state 29
    func_param  go to state 46
    expr        go to state 47


State 16

   11 commands: IDENTIFIER . ASSIGN expr ';'
   36 func_call: IDENTIFIER . '(' func_param ')'
   69 expr: IDENTIFIER .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, '=', '<', '-', '+', '*', '/', '%']
   70     | IDENTIFIER . ARRAY

    ARRAY   shift, and go to state 48
    ASSIGN  shift, and go to state 14
    '('     shift, and go to state 15

    $default  reduce using rule 69 (expr)


State 17

   67 expr: POSINT .

    $default  reduce using rule 67 (expr)


State 18

   68 expr: REAL .

    $default  reduce using rule 68 (expr)


State 19

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   19 if_state: . %empty  [KW_FI]
   20         | . expr KW_THEN if_state
   21         | . commands if_state
   22         | . KW_ELSE if_state
   22         | KW_ELSE . if_state
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 16
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_IF       shift, and go to state 4
    KW_ELSE     shift, and go to state 19
    KW_NOT      shift, and go to state 20
    KW_WHILE    shift, and go to state 5
    KW_RETURN   shift, and go to state 8
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    $default  reduce using rule 19 (if_state)

    commands     go to state 24
    if_state     go to state 49
    func_call    go to state 26
    return_expr  go to state 13
    expr         go to state 27


State 20

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   75     | KW_NOT . expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 50


State 21

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   74     | '-' . expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 51


State 22

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   73     | '+' . expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 52


State 23

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   72     | '(' . expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 53


State 24

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   19 if_state: . %empty  [KW_FI]
   20         | . expr KW_THEN if_state
   21         | . commands if_state
   21         | commands . if_state
   22         | . KW_ELSE if_state
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 16
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_IF       shift, and go to state 4
    KW_ELSE     shift, and go to state 19
    KW_NOT      shift, and go to state 20
    KW_WHILE    shift, and go to state 5
    KW_RETURN   shift, and go to state 8
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    $default  reduce using rule 19 (if_state)

    commands     go to state 24
    if_state     go to state 54
    func_call    go to state 26
    return_expr  go to state 13
    expr         go to state 27


State 25

   13 commands: KW_IF if_state . KW_FI

    KW_FI  shift, and go to state 55


State 26

   10 commands: func_call . ';'
   71 expr: func_call .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, '=', '<', '-', '+', '*', '/', '%']

    ';'  shift, and go to state 43

    $default  reduce using rule 71 (expr)


State 27

   20 if_state: expr . KW_THEN if_state
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    KW_THEN      shift, and go to state 56
    KW_AND       shift, and go to state 57
    KW_OR        shift, and go to state 58
    KW_NOT_EQL   shift, and go to state 59
    KW_LESS_EQL  shift, and go to state 60
    '='          shift, and go to state 61
    '<'          shift, and go to state 62
    '-'          shift, and go to state 63
    '+'          shift, and go to state 64
    '*'          shift, and go to state 65
    '/'          shift, and go to state 66
    '%'          shift, and go to state 67


State 28

   36 func_call: IDENTIFIER . '(' func_param ')'
   69 expr: IDENTIFIER .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   70     | IDENTIFIER . ARRAY

    ARRAY  shift, and go to state 48
    '('    shift, and go to state 15

    $default  reduce using rule 69 (expr)


State 29

   71 expr: func_call .

    $default  reduce using rule 71 (expr)


State 30

   14 commands: KW_WHILE expr . KW_LOOP while_state KW_POOL
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    KW_AND       shift, and go to state 57
    KW_OR        shift, and go to state 58
    KW_NOT_EQL   shift, and go to state 59
    KW_LESS_EQL  shift, and go to state 60
    KW_LOOP      shift, and go to state 68
    '='          shift, and go to state 61
    '<'          shift, and go to state 62
    '-'          shift, and go to state 63
    '+'          shift, and go to state 64
    '*'          shift, and go to state 65
    '/'          shift, and go to state 66
    '%'          shift, and go to state 67


State 31

   35 func_decl: KW_CONST IDENTIFIER . ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}'
   57 decl_const: IDENTIFIER . ASSIGN data decl_const
   58           | IDENTIFIER . ARRAY ASSIGN data decl_const

    ARRAY   shift, and go to state 69
    ASSIGN  shift, and go to state 70


State 32

    9 defined_func: KW_INT .

    $default  reduce using rule 9 (defined_func)


State 33

    8 body: KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    ASSIGN  shift, and go to state 71


State 34

   28 const_type: . KW_INT
   29           | . KW_REAL
   30           | . KW_BOOL
   31           | . KW_STRING
   59 decl_const: ':' . const_type

    KW_INT     shift, and go to state 72
    KW_REAL    shift, and go to state 73
    KW_BOOL    shift, and go to state 74
    KW_STRING  shift, and go to state 75

    const_type  go to state 76


State 35

   56 decl_const: . ',' decl_const
   56           | ',' . decl_const
   57           | . IDENTIFIER ASSIGN data decl_const
   58           | . IDENTIFIER ARRAY ASSIGN data decl_const
   59           | . ':' const_type

    IDENTIFIER  shift, and go to state 77
    ':'         shift, and go to state 34
    ','         shift, and go to state 35

    decl_const  go to state 78


State 36

    7 body: KW_CONST defined_func . ";;;;"

    ";;;;"  shift, and go to state 79


State 37

    4 body: KW_CONST decl_const . ';'

    ';'  shift, and go to state 80


State 38

   60 decl: . %empty  [';']
   61     | . ',' decl
   62     | . IDENTIFIER decl
   62     | IDENTIFIER . decl
   63     | . IDENTIFIER ARRAY decl
   63     | IDENTIFIER . ARRAY decl
   64     | . IDENTIFIER ARRAY ASSIGN data decl
   64     | IDENTIFIER . ARRAY ASSIGN data decl
   65     | . IDENTIFIER ASSIGN data decl
   65     | IDENTIFIER . ASSIGN data decl
   66     | . ':' type

    IDENTIFIER  shift, and go to state 38
    ARRAY       shift, and go to state 81
    ASSIGN      shift, and go to state 82
    ':'         shift, and go to state 39
    ','         shift, and go to state 40

    $default  reduce using rule 60 (decl)

    decl  go to state 83


State 39

   23 type: . KW_INT
   24     | . KW_REAL
   25     | . KW_BOOL
   26     | . KW_STRING
   27     | . "[]" type
   66 decl: ':' . type

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87
    "[]"       shift, and go to state 88

    type  go to state 89


State 40

   60 decl: . %empty  [';']
   61     | . ',' decl
   61     | ',' . decl
   62     | . IDENTIFIER decl
   63     | . IDENTIFIER ARRAY decl
   64     | . IDENTIFIER ARRAY ASSIGN data decl
   65     | . IDENTIFIER ASSIGN data decl
   66     | . ':' type

    IDENTIFIER  shift, and go to state 38
    ':'         shift, and go to state 39
    ','         shift, and go to state 40

    $default  reduce using rule 60 (decl)

    decl  go to state 90


State 41

    3 body: KW_LET decl . ';'

    ';'  shift, and go to state 91


State 42

   40 return_expr: KW_RETURN expr .  [';']
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    KW_AND       shift, and go to state 57
    KW_OR        shift, and go to state 58
    KW_NOT_EQL   shift, and go to state 59
    KW_LESS_EQL  shift, and go to state 60
    '='          shift, and go to state 61
    '<'          shift, and go to state 62
    '-'          shift, and go to state 63
    '+'          shift, and go to state 64
    '*'          shift, and go to state 65
    '/'          shift, and go to state 66
    '%'          shift, and go to state 67

    $default  reduce using rule 40 (return_expr)


State 43

   10 commands: func_call ';' .

    $default  reduce using rule 10 (commands)


State 44

   12 commands: return_expr ';' .

    $default  reduce using rule 12 (commands)


State 45

   11 commands: IDENTIFIER ASSIGN expr . ';'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    KW_AND       shift, and go to state 57
    KW_OR        shift, and go to state 58
    KW_NOT_EQL   shift, and go to state 59
    KW_LESS_EQL  shift, and go to state 60
    '='          shift, and go to state 61
    '<'          shift, and go to state 62
    '-'          shift, and go to state 63
    '+'          shift, and go to state 64
    '*'          shift, and go to state 65
    '/'          shift, and go to state 66
    '%'          shift, and go to state 67
    ';'          shift, and go to state 92


State 46

   36 func_call: IDENTIFIER '(' func_param . ')'

    ')'  shift, and go to state 93


State 47

   38 func_param: expr . ',' func_param
   39           | expr .  [')']
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    KW_AND       shift, and go to state 57
    KW_OR        shift, and go to state 58
    KW_NOT_EQL   shift, and go to state 59
    KW_LESS_EQL  shift, and go to state 60
    '='          shift, and go to state 61
    '<'          shift, and go to state 62
    '-'          shift, and go to state 63
    '+'          shift, and go to state 64
    '*'          shift, and go to state 65
    '/'          shift, and go to state 66
    '%'          shift, and go to state 67
    ','          shift, and go to state 94

    $default  reduce using rule 39 (func_param)


State 48

   70 expr: IDENTIFIER ARRAY .

    $default  reduce using rule 70 (expr)


State 49

   22 if_state: KW_ELSE if_state .

    $default  reduce using rule 22 (if_state)


State 50

   75 expr: KW_NOT expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   76     | expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    $default  reduce using rule 75 (expr)

    Conflict between rule 75 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 75 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 75 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < KW_NOT).
    Conflict between rule 75 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < KW_NOT).
    Conflict between rule 75 and token '=' resolved as reduce ('=' < KW_NOT).
    Conflict between rule 75 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 75 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 75 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 75 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 75 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 75 and token '%' resolved as reduce ('%' < KW_NOT).


State 51

   74 expr: '-' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   76     | expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67

    $default  reduce using rule 74 (expr)

    Conflict between rule 74 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 74 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 74 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '-').
    Conflict between rule 74 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '-').
    Conflict between rule 74 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 74 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 74 and token '-' resolved as reduce (%left '-').
    Conflict between rule 74 and token '+' resolved as reduce (%left '+').
    Conflict between rule 74 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 74 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 74 and token '%' resolved as shift ('-' < '%').


State 52

   73 expr: '+' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   76     | expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67

    $default  reduce using rule 73 (expr)

    Conflict between rule 73 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 73 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 73 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '+').
    Conflict between rule 73 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '+').
    Conflict between rule 73 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 73 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 73 and token '-' resolved as reduce (%left '-').
    Conflict between rule 73 and token '+' resolved as reduce (%left '+').
    Conflict between rule 73 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 73 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 73 and token '%' resolved as shift ('+' < '%').


State 53

   72 expr: '(' expr . ')'
   76     | expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    KW_AND       shift, and go to state 57
    KW_OR        shift, and go to state 58
    KW_NOT_EQL   shift, and go to state 59
    KW_LESS_EQL  shift, and go to state 60
    '='          shift, and go to state 61
    '<'          shift, and go to state 62
    '-'          shift, and go to state 63
    '+'          shift, and go to state 64
    '*'          shift, and go to state 65
    '/'          shift, and go to state 66
    '%'          shift, and go to state 67
    ')'          shift, and go to state 95


State 54

   21 if_state: commands if_state .

    $default  reduce using rule 21 (if_state)


State 55

   13 commands: KW_IF if_state KW_FI .

    $default  reduce using rule 13 (commands)


State 56

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   19 if_state: . %empty  [KW_FI]
   20         | . expr KW_THEN if_state
   20         | expr KW_THEN . if_state
   21         | . commands if_state
   22         | . KW_ELSE if_state
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 16
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_IF       shift, and go to state 4
    KW_ELSE     shift, and go to state 19
    KW_NOT      shift, and go to state 20
    KW_WHILE    shift, and go to state 5
    KW_RETURN   shift, and go to state 8
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    $default  reduce using rule 19 (if_state)

    commands     go to state 24
    if_state     go to state 96
    func_call    go to state 26
    return_expr  go to state 13
    expr         go to state 27


State 57

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr
   86     | expr KW_AND . expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 97


State 58

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   85     | expr KW_OR . expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 98


State 59

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   83     | expr KW_NOT_EQL . expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 99


State 60

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   84     | expr KW_LESS_EQL . expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 100


State 61

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   81     | expr '=' . expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 101


State 62

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   82     | expr '<' . expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 102


State 63

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   77     | expr '-' . expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 103


State 64

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   76     | expr '+' . expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 104


State 65

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   78     | expr '*' . expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 105


State 66

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   79     | expr '/' . expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 106


State 67

   36 func_call: . IDENTIFIER '(' func_param ')'
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   80     | expr '%' . expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    func_call  go to state 29
    expr       go to state 107


State 68

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   14         | KW_WHILE expr KW_LOOP . while_state KW_POOL
   17 while_state: . commands
   18            | . commands while_state
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 3
    KW_IF       shift, and go to state 4
    KW_WHILE    shift, and go to state 5
    KW_RETURN   shift, and go to state 8

    commands     go to state 108
    while_state  go to state 109
    func_call    go to state 12
    return_expr  go to state 13


State 69

   58 decl_const: IDENTIFIER ARRAY . ASSIGN data decl_const

    ASSIGN  shift, and go to state 110


State 70

   35 func_decl: KW_CONST IDENTIFIER ASSIGN . '(' func_par_decl ')' ':' type '{' func_body '}'
   50 data: . POSINT
   51     | . REAL
   52     | . STRING
   53     | . KW_TRUE
   54     | . KW_FALSE
   55     | . ARRAY
   57 decl_const: IDENTIFIER ASSIGN . data decl_const

    POSINT    shift, and go to state 111
    REAL      shift, and go to state 112
    STRING    shift, and go to state 113
    ARRAY     shift, and go to state 114
    KW_TRUE   shift, and go to state 115
    KW_FALSE  shift, and go to state 116
    '('       shift, and go to state 117

    data  go to state 118


State 71

    8 body: KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    '('  shift, and go to state 119


State 72

   28 const_type: KW_INT .

    $default  reduce using rule 28 (const_type)


State 73

   29 const_type: KW_REAL .

    $default  reduce using rule 29 (const_type)


State 74

   30 const_type: KW_BOOL .

    $default  reduce using rule 30 (const_type)


State 75

   31 const_type: KW_STRING .

    $default  reduce using rule 31 (const_type)


State 76

   59 decl_const: ':' const_type .

    $default  reduce using rule 59 (decl_const)


State 77

   57 decl_const: IDENTIFIER . ASSIGN data decl_const
   58           | IDENTIFIER . ARRAY ASSIGN data decl_const

    ARRAY   shift, and go to state 69
    ASSIGN  shift, and go to state 120


State 78

   56 decl_const: ',' decl_const .

    $default  reduce using rule 56 (decl_const)


State 79

    7 body: KW_CONST defined_func ";;;;" .

    $default  reduce using rule 7 (body)


State 80

    4 body: KW_CONST decl_const ';' .

    $default  reduce using rule 4 (body)


State 81

   60 decl: . %empty  [';']
   61     | . ',' decl
   62     | . IDENTIFIER decl
   63     | . IDENTIFIER ARRAY decl
   63     | IDENTIFIER ARRAY . decl
   64     | . IDENTIFIER ARRAY ASSIGN data decl
   64     | IDENTIFIER ARRAY . ASSIGN data decl
   65     | . IDENTIFIER ASSIGN data decl
   66     | . ':' type

    IDENTIFIER  shift, and go to state 38
    ASSIGN      shift, and go to state 121
    ':'         shift, and go to state 39
    ','         shift, and go to state 40

    $default  reduce using rule 60 (decl)

    decl  go to state 122


State 82

   50 data: . POSINT
   51     | . REAL
   52     | . STRING
   53     | . KW_TRUE
   54     | . KW_FALSE
   55     | . ARRAY
   65 decl: IDENTIFIER ASSIGN . data decl

    POSINT    shift, and go to state 111
    REAL      shift, and go to state 112
    STRING    shift, and go to state 113
    ARRAY     shift, and go to state 114
    KW_TRUE   shift, and go to state 115
    KW_FALSE  shift, and go to state 116

    data  go to state 123


State 83

   62 decl: IDENTIFIER decl .

    $default  reduce using rule 62 (decl)


State 84

   23 type: KW_INT .

    $default  reduce using rule 23 (type)


State 85

   24 type: KW_REAL .

    $default  reduce using rule 24 (type)


State 86

   25 type: KW_BOOL .

    $default  reduce using rule 25 (type)


State 87

   26 type: KW_STRING .

    $default  reduce using rule 26 (type)


State 88

   23 type: . KW_INT
   24     | . KW_REAL
   25     | . KW_BOOL
   26     | . KW_STRING
   27     | . "[]" type
   27     | "[]" . type

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87
    "[]"       shift, and go to state 88

    type  go to state 124


State 89

   66 decl: ':' type .

    $default  reduce using rule 66 (decl)


State 90

   61 decl: ',' decl .

    $default  reduce using rule 61 (decl)


State 91

    3 body: KW_LET decl ';' .

    $default  reduce using rule 3 (body)


State 92

   11 commands: IDENTIFIER ASSIGN expr ';' .

    $default  reduce using rule 11 (commands)


State 93

   36 func_call: IDENTIFIER '(' func_param ')' .

    $default  reduce using rule 36 (func_call)


State 94

   36 func_call: . IDENTIFIER '(' func_param ')'
   37 func_param: . %empty  [')']
   38           | . expr ',' func_param
   38           | expr ',' . func_param
   39           | . expr
   67 expr: . POSINT
   68     | . REAL
   69     | . IDENTIFIER
   70     | . IDENTIFIER ARRAY
   71     | . func_call
   72     | . '(' expr ')'
   73     | . '+' expr
   74     | . '-' expr
   75     | . KW_NOT expr
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr '=' expr
   82     | . expr '<' expr
   83     | . expr KW_NOT_EQL expr
   84     | . expr KW_LESS_EQL expr
   85     | . expr KW_OR expr
   86     | . expr KW_AND expr

    IDENTIFIER  shift, and go to state 28
    POSINT      shift, and go to state 17
    REAL        shift, and go to state 18
    KW_NOT      shift, and go to state 20
    '-'         shift, and go to state 21
    '+'         shift, and go to state 22
    '('         shift, and go to state 23

    $default  reduce using rule 37 (func_param)

    func_call   go to state 29
    func_param  go to state 125
    expr        go to state 47


State 95

   72 expr: '(' expr ')' .

    $default  reduce using rule 72 (expr)


State 96

   20 if_state: expr KW_THEN if_state .

    $default  reduce using rule 20 (if_state)


State 97

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr
   86     | expr KW_AND expr .  [KW_THEN, KW_AND, KW_OR, KW_LOOP, ';', ')', ',']

    KW_NOT_EQL   shift, and go to state 59
    KW_LESS_EQL  shift, and go to state 60
    '='          shift, and go to state 61
    '<'          shift, and go to state 62
    '-'          shift, and go to state 63
    '+'          shift, and go to state 64
    '*'          shift, and go to state 65
    '/'          shift, and go to state 66
    '%'          shift, and go to state 67

    $default  reduce using rule 86 (expr)

    Conflict between rule 86 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 86 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 86 and token KW_NOT_EQL resolved as shift (KW_AND < KW_NOT_EQL).
    Conflict between rule 86 and token KW_LESS_EQL resolved as shift (KW_AND < KW_LESS_EQL).
    Conflict between rule 86 and token '=' resolved as shift (KW_AND < '=').
    Conflict between rule 86 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 86 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 86 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 86 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 86 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 86 and token '%' resolved as shift (KW_AND < '%').


State 98

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   85     | expr KW_OR expr .  [KW_THEN, KW_OR, KW_LOOP, ';', ')', ',']
   86     | expr . KW_AND expr

    KW_AND       shift, and go to state 57
    KW_NOT_EQL   shift, and go to state 59
    KW_LESS_EQL  shift, and go to state 60
    '='          shift, and go to state 61
    '<'          shift, and go to state 62
    '-'          shift, and go to state 63
    '+'          shift, and go to state 64
    '*'          shift, and go to state 65
    '/'          shift, and go to state 66
    '%'          shift, and go to state 67

    $default  reduce using rule 85 (expr)

    Conflict between rule 85 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 85 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 85 and token KW_NOT_EQL resolved as shift (KW_OR < KW_NOT_EQL).
    Conflict between rule 85 and token KW_LESS_EQL resolved as shift (KW_OR < KW_LESS_EQL).
    Conflict between rule 85 and token '=' resolved as shift (KW_OR < '=').
    Conflict between rule 85 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 85 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 85 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 85 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 85 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 85 and token '%' resolved as shift (KW_OR < '%').


State 99

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   83     | expr KW_NOT_EQL expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    '-'  shift, and go to state 63
    '+'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67

    $default  reduce using rule 83 (expr)

    Conflict between rule 83 and token KW_AND resolved as reduce (KW_AND < KW_NOT_EQL).
    Conflict between rule 83 and token KW_OR resolved as reduce (KW_OR < KW_NOT_EQL).
    Conflict between rule 83 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 83 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 83 and token '=' resolved as reduce (%left '=').
    Conflict between rule 83 and token '<' resolved as reduce (%left '<').
    Conflict between rule 83 and token '-' resolved as shift (KW_NOT_EQL < '-').
    Conflict between rule 83 and token '+' resolved as shift (KW_NOT_EQL < '+').
    Conflict between rule 83 and token '*' resolved as shift (KW_NOT_EQL < '*').
    Conflict between rule 83 and token '/' resolved as shift (KW_NOT_EQL < '/').
    Conflict between rule 83 and token '%' resolved as shift (KW_NOT_EQL < '%').


State 100

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   84     | expr KW_LESS_EQL expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    '-'  shift, and go to state 63
    '+'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67

    $default  reduce using rule 84 (expr)

    Conflict between rule 84 and token KW_AND resolved as reduce (KW_AND < KW_LESS_EQL).
    Conflict between rule 84 and token KW_OR resolved as reduce (KW_OR < KW_LESS_EQL).
    Conflict between rule 84 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 84 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 84 and token '=' resolved as reduce (%left '=').
    Conflict between rule 84 and token '<' resolved as reduce (%left '<').
    Conflict between rule 84 and token '-' resolved as shift (KW_LESS_EQL < '-').
    Conflict between rule 84 and token '+' resolved as shift (KW_LESS_EQL < '+').
    Conflict between rule 84 and token '*' resolved as shift (KW_LESS_EQL < '*').
    Conflict between rule 84 and token '/' resolved as shift (KW_LESS_EQL < '/').
    Conflict between rule 84 and token '%' resolved as shift (KW_LESS_EQL < '%').


State 101

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   81     | expr '=' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    '-'  shift, and go to state 63
    '+'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67

    $default  reduce using rule 81 (expr)

    Conflict between rule 81 and token KW_AND resolved as reduce (KW_AND < '=').
    Conflict between rule 81 and token KW_OR resolved as reduce (KW_OR < '=').
    Conflict between rule 81 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 81 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 81 and token '=' resolved as reduce (%left '=').
    Conflict between rule 81 and token '<' resolved as reduce (%left '<').
    Conflict between rule 81 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 81 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 81 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 81 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 81 and token '%' resolved as shift ('=' < '%').


State 102

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   82     | expr '<' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', ';', ')', ',']
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    '-'  shift, and go to state 63
    '+'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67

    $default  reduce using rule 82 (expr)

    Conflict between rule 82 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 82 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 82 and token KW_NOT_EQL resolved as reduce (%left KW_NOT_EQL).
    Conflict between rule 82 and token KW_LESS_EQL resolved as reduce (%left KW_LESS_EQL).
    Conflict between rule 82 and token '=' resolved as reduce (%left '=').
    Conflict between rule 82 and token '<' resolved as reduce (%left '<').
    Conflict between rule 82 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 82 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 82 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 82 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 82 and token '%' resolved as shift ('<' < '%').


State 103

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   77     | expr '-' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67

    $default  reduce using rule 77 (expr)

    Conflict between rule 77 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 77 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '-').
    Conflict between rule 77 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '-').
    Conflict between rule 77 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 77 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 77 and token '-' resolved as reduce (%left '-').
    Conflict between rule 77 and token '+' resolved as reduce (%left '+').
    Conflict between rule 77 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 77 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 77 and token '%' resolved as shift ('-' < '%').


State 104

   76 expr: expr . '+' expr
   76     | expr '+' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', ';', ')', ',']
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67

    $default  reduce using rule 76 (expr)

    Conflict between rule 76 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 76 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 76 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '+').
    Conflict between rule 76 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '+').
    Conflict between rule 76 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 76 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 76 and token '-' resolved as reduce (%left '-').
    Conflict between rule 76 and token '+' resolved as reduce (%left '+').
    Conflict between rule 76 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 76 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 76 and token '%' resolved as shift ('+' < '%').


State 105

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   78     | expr '*' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    $default  reduce using rule 78 (expr)

    Conflict between rule 78 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 78 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 78 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '*').
    Conflict between rule 78 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '*').
    Conflict between rule 78 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 78 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 78 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 78 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 78 and token '*' resolved as reduce (%left '*').
    Conflict between rule 78 and token '/' resolved as reduce (%left '/').
    Conflict between rule 78 and token '%' resolved as reduce (%left '%').


State 106

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   79     | expr '/' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   80     | expr . '%' expr
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    $default  reduce using rule 79 (expr)

    Conflict between rule 79 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 79 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 79 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '/').
    Conflict between rule 79 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '/').
    Conflict between rule 79 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 79 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 79 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 79 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 79 and token '*' resolved as reduce (%left '*').
    Conflict between rule 79 and token '/' resolved as reduce (%left '/').
    Conflict between rule 79 and token '%' resolved as reduce (%left '%').


State 107

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   80     | expr '%' expr .  [KW_THEN, KW_AND, KW_OR, KW_NOT_EQL, KW_LESS_EQL, KW_LOOP, '=', '<', '-', '+', '*', '/', '%', ';', ')', ',']
   81     | expr . '=' expr
   82     | expr . '<' expr
   83     | expr . KW_NOT_EQL expr
   84     | expr . KW_LESS_EQL expr
   85     | expr . KW_OR expr
   86     | expr . KW_AND expr

    $default  reduce using rule 80 (expr)

    Conflict between rule 80 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 80 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 80 and token KW_NOT_EQL resolved as reduce (KW_NOT_EQL < '%').
    Conflict between rule 80 and token KW_LESS_EQL resolved as reduce (KW_LESS_EQL < '%').
    Conflict between rule 80 and token '=' resolved as reduce ('=' < '%').
    Conflict between rule 80 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 80 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 80 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 80 and token '*' resolved as reduce (%left '*').
    Conflict between rule 80 and token '/' resolved as reduce (%left '/').
    Conflict between rule 80 and token '%' resolved as reduce (%left '%').


State 108

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   17 while_state: . commands
   17            | commands .  [KW_POOL]
   18            | . commands while_state
   18            | commands . while_state
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 3
    KW_IF       shift, and go to state 4
    KW_WHILE    shift, and go to state 5
    KW_RETURN   shift, and go to state 8

    $default  reduce using rule 17 (while_state)

    commands     go to state 108
    while_state  go to state 126
    func_call    go to state 12
    return_expr  go to state 13


State 109

   14 commands: KW_WHILE expr KW_LOOP while_state . KW_POOL

    KW_POOL  shift, and go to state 127


State 110

   50 data: . POSINT
   51     | . REAL
   52     | . STRING
   53     | . KW_TRUE
   54     | . KW_FALSE
   55     | . ARRAY
   58 decl_const: IDENTIFIER ARRAY ASSIGN . data decl_const

    POSINT    shift, and go to state 111
    REAL      shift, and go to state 112
    STRING    shift, and go to state 113
    ARRAY     shift, and go to state 114
    KW_TRUE   shift, and go to state 115
    KW_FALSE  shift, and go to state 116

    data  go to state 128


State 111

   50 data: POSINT .

    $default  reduce using rule 50 (data)


State 112

   51 data: REAL .

    $default  reduce using rule 51 (data)


State 113

   52 data: STRING .

    $default  reduce using rule 52 (data)


State 114

   55 data: ARRAY .

    $default  reduce using rule 55 (data)


State 115

   53 data: KW_TRUE .

    $default  reduce using rule 53 (data)


State 116

   54 data: KW_FALSE .

    $default  reduce using rule 54 (data)


State 117

   35 func_decl: KW_CONST IDENTIFIER ASSIGN '(' . func_par_decl ')' ':' type '{' func_body '}'
   41 func_par_decl: . %empty  [')']
   42              | . IDENTIFIER
   43              | . IDENTIFIER '[' ']'
   44              | . IDENTIFIER '[' ']' ':' type func_par_decl
   45              | . IDENTIFIER ':' type func_par_decl
   46              | . IDENTIFIER ',' func_par_decl
   47              | . IDENTIFIER '[' ']' ',' func_par_decl
   48              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   49              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 129

    $default  reduce using rule 41 (func_par_decl)

    func_par_decl  go to state 130


State 118

   56 decl_const: . ',' decl_const
   57           | . IDENTIFIER ASSIGN data decl_const
   57           | IDENTIFIER ASSIGN data . decl_const
   58           | . IDENTIFIER ARRAY ASSIGN data decl_const
   59           | . ':' const_type

    IDENTIFIER  shift, and go to state 77
    ':'         shift, and go to state 34
    ','         shift, and go to state 35

    decl_const  go to state 131


State 119

    8 body: KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    ')'  shift, and go to state 132


State 120

   50 data: . POSINT
   51     | . REAL
   52     | . STRING
   53     | . KW_TRUE
   54     | . KW_FALSE
   55     | . ARRAY
   57 decl_const: IDENTIFIER ASSIGN . data decl_const

    POSINT    shift, and go to state 111
    REAL      shift, and go to state 112
    STRING    shift, and go to state 113
    ARRAY     shift, and go to state 114
    KW_TRUE   shift, and go to state 115
    KW_FALSE  shift, and go to state 116

    data  go to state 118


State 121

   50 data: . POSINT
   51     | . REAL
   52     | . STRING
   53     | . KW_TRUE
   54     | . KW_FALSE
   55     | . ARRAY
   64 decl: IDENTIFIER ARRAY ASSIGN . data decl

    POSINT    shift, and go to state 111
    REAL      shift, and go to state 112
    STRING    shift, and go to state 113
    ARRAY     shift, and go to state 114
    KW_TRUE   shift, and go to state 115
    KW_FALSE  shift, and go to state 116

    data  go to state 133


State 122

   63 decl: IDENTIFIER ARRAY decl .

    $default  reduce using rule 63 (decl)


State 123

   60 decl: . %empty  [';']
   61     | . ',' decl
   62     | . IDENTIFIER decl
   63     | . IDENTIFIER ARRAY decl
   64     | . IDENTIFIER ARRAY ASSIGN data decl
   65     | . IDENTIFIER ASSIGN data decl
   65     | IDENTIFIER ASSIGN data . decl
   66     | . ':' type

    IDENTIFIER  shift, and go to state 38
    ':'         shift, and go to state 39
    ','         shift, and go to state 40

    $default  reduce using rule 60 (decl)

    decl  go to state 134


State 124

   27 type: "[]" type .

    $default  reduce using rule 27 (type)


State 125

   38 func_param: expr ',' func_param .

    $default  reduce using rule 38 (func_param)


State 126

   18 while_state: commands while_state .

    $default  reduce using rule 18 (while_state)


State 127

   14 commands: KW_WHILE expr KW_LOOP while_state KW_POOL .

    $default  reduce using rule 14 (commands)


State 128

   56 decl_const: . ',' decl_const
   57           | . IDENTIFIER ASSIGN data decl_const
   58           | . IDENTIFIER ARRAY ASSIGN data decl_const
   58           | IDENTIFIER ARRAY ASSIGN data . decl_const
   59           | . ':' const_type

    IDENTIFIER  shift, and go to state 77
    ':'         shift, and go to state 34
    ','         shift, and go to state 35

    decl_const  go to state 135


State 129

   42 func_par_decl: IDENTIFIER .  [')']
   43              | IDENTIFIER . '[' ']'
   44              | IDENTIFIER . '[' ']' ':' type func_par_decl
   45              | IDENTIFIER . ':' type func_par_decl
   46              | IDENTIFIER . ',' func_par_decl
   47              | IDENTIFIER . '[' ']' ',' func_par_decl
   48              | IDENTIFIER . '[' ']' ':' type ',' func_par_decl
   49              | IDENTIFIER . ':' type ',' func_par_decl

    ':'  shift, and go to state 136
    ','  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 42 (func_par_decl)


State 130

   35 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl . ')' ':' type '{' func_body '}'

    ')'  shift, and go to state 139


State 131

   57 decl_const: IDENTIFIER ASSIGN data decl_const .

    $default  reduce using rule 57 (decl_const)


State 132

    8 body: KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    ':'  shift, and go to state 140


State 133

   60 decl: . %empty  [';']
   61     | . ',' decl
   62     | . IDENTIFIER decl
   63     | . IDENTIFIER ARRAY decl
   64     | . IDENTIFIER ARRAY ASSIGN data decl
   64     | IDENTIFIER ARRAY ASSIGN data . decl
   65     | . IDENTIFIER ASSIGN data decl
   66     | . ':' type

    IDENTIFIER  shift, and go to state 38
    ':'         shift, and go to state 39
    ','         shift, and go to state 40

    $default  reduce using rule 60 (decl)

    decl  go to state 141


State 134

   65 decl: IDENTIFIER ASSIGN data decl .

    $default  reduce using rule 65 (decl)


State 135

   58 decl_const: IDENTIFIER ARRAY ASSIGN data decl_const .

    $default  reduce using rule 58 (decl_const)


State 136

   23 type: . KW_INT
   24     | . KW_REAL
   25     | . KW_BOOL
   26     | . KW_STRING
   27     | . "[]" type
   45 func_par_decl: IDENTIFIER ':' . type func_par_decl
   49              | IDENTIFIER ':' . type ',' func_par_decl

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87
    "[]"       shift, and go to state 88

    type  go to state 142


State 137

   41 func_par_decl: . %empty  [')']
   42              | . IDENTIFIER
   43              | . IDENTIFIER '[' ']'
   44              | . IDENTIFIER '[' ']' ':' type func_par_decl
   45              | . IDENTIFIER ':' type func_par_decl
   46              | . IDENTIFIER ',' func_par_decl
   46              | IDENTIFIER ',' . func_par_decl
   47              | . IDENTIFIER '[' ']' ',' func_par_decl
   48              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   49              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 129

    $default  reduce using rule 41 (func_par_decl)

    func_par_decl  go to state 143


State 138

   43 func_par_decl: IDENTIFIER '[' . ']'
   44              | IDENTIFIER '[' . ']' ':' type func_par_decl
   47              | IDENTIFIER '[' . ']' ',' func_par_decl
   48              | IDENTIFIER '[' . ']' ':' type ',' func_par_decl

    ']'  shift, and go to state 144


State 139

   35 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' . ':' type '{' func_body '}'

    ':'  shift, and go to state 145


State 140

    8 body: KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT KW_MAIN_ASSIGN '{' main_body '}'

    KW_INT  shift, and go to state 146


State 141

   64 decl: IDENTIFIER ARRAY ASSIGN data decl .

    $default  reduce using rule 64 (decl)


State 142

   41 func_par_decl: . %empty  [')']
   42              | . IDENTIFIER
   43              | . IDENTIFIER '[' ']'
   44              | . IDENTIFIER '[' ']' ':' type func_par_decl
   45              | . IDENTIFIER ':' type func_par_decl
   45              | IDENTIFIER ':' type . func_par_decl
   46              | . IDENTIFIER ',' func_par_decl
   47              | . IDENTIFIER '[' ']' ',' func_par_decl
   48              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   49              | . IDENTIFIER ':' type ',' func_par_decl
   49              | IDENTIFIER ':' type . ',' func_par_decl

    IDENTIFIER  shift, and go to state 129
    ','         shift, and go to state 147

    $default  reduce using rule 41 (func_par_decl)

    func_par_decl  go to state 148


State 143

   46 func_par_decl: IDENTIFIER ',' func_par_decl .

    $default  reduce using rule 46 (func_par_decl)


State 144

   43 func_par_decl: IDENTIFIER '[' ']' .  [')']
   44              | IDENTIFIER '[' ']' . ':' type func_par_decl
   47              | IDENTIFIER '[' ']' . ',' func_par_decl
   48              | IDENTIFIER '[' ']' . ':' type ',' func_par_decl

    ':'  shift, and go to state 149
    ','  shift, and go to state 150

    $default  reduce using rule 43 (func_par_decl)


State 145

   23 type: . KW_INT
   24     | . KW_REAL
   25     | . KW_BOOL
   26     | . KW_STRING
   27     | . "[]" type
   35 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' . type '{' func_body '}'

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87
    "[]"       shift, and go to state 88

    type  go to state 151


State 146

    8 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . KW_MAIN_ASSIGN '{' main_body '}'

    KW_MAIN_ASSIGN  shift, and go to state 152


State 147

   41 func_par_decl: . %empty  [')']
   42              | . IDENTIFIER
   43              | . IDENTIFIER '[' ']'
   44              | . IDENTIFIER '[' ']' ':' type func_par_decl
   45              | . IDENTIFIER ':' type func_par_decl
   46              | . IDENTIFIER ',' func_par_decl
   47              | . IDENTIFIER '[' ']' ',' func_par_decl
   48              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   49              | . IDENTIFIER ':' type ',' func_par_decl
   49              | IDENTIFIER ':' type ',' . func_par_decl

    IDENTIFIER  shift, and go to state 129

    $default  reduce using rule 41 (func_par_decl)

    func_par_decl  go to state 153


State 148

   45 func_par_decl: IDENTIFIER ':' type func_par_decl .

    $default  reduce using rule 45 (func_par_decl)


State 149

   23 type: . KW_INT
   24     | . KW_REAL
   25     | . KW_BOOL
   26     | . KW_STRING
   27     | . "[]" type
   44 func_par_decl: IDENTIFIER '[' ']' ':' . type func_par_decl
   48              | IDENTIFIER '[' ']' ':' . type ',' func_par_decl

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87
    "[]"       shift, and go to state 88

    type  go to state 154


State 150

   41 func_par_decl: . %empty  [')']
   42              | . IDENTIFIER
   43              | . IDENTIFIER '[' ']'
   44              | . IDENTIFIER '[' ']' ':' type func_par_decl
   45              | . IDENTIFIER ':' type func_par_decl
   46              | . IDENTIFIER ',' func_par_decl
   47              | . IDENTIFIER '[' ']' ',' func_par_decl
   47              | IDENTIFIER '[' ']' ',' . func_par_decl
   48              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   49              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 129

    $default  reduce using rule 41 (func_par_decl)

    func_par_decl  go to state 155


State 151

   35 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type . '{' func_body '}'

    '{'  shift, and go to state 156


State 152

    8 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN . '{' main_body '}'

    '{'  shift, and go to state 157


State 153

   49 func_par_decl: IDENTIFIER ':' type ',' func_par_decl .

    $default  reduce using rule 49 (func_par_decl)


State 154

   41 func_par_decl: . %empty  [')']
   42              | . IDENTIFIER
   43              | . IDENTIFIER '[' ']'
   44              | . IDENTIFIER '[' ']' ':' type func_par_decl
   44              | IDENTIFIER '[' ']' ':' type . func_par_decl
   45              | . IDENTIFIER ':' type func_par_decl
   46              | . IDENTIFIER ',' func_par_decl
   47              | . IDENTIFIER '[' ']' ',' func_par_decl
   48              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   48              | IDENTIFIER '[' ']' ':' type . ',' func_par_decl
   49              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 129
    ','         shift, and go to state 158

    $default  reduce using rule 41 (func_par_decl)

    func_par_decl  go to state 159


State 155

   47 func_par_decl: IDENTIFIER '[' ']' ',' func_par_decl .

    $default  reduce using rule 47 (func_par_decl)


State 156

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   32 func_body: . %empty  ['}']
   33          | . KW_LET decl ';' func_body
   34          | . commands func_body
   35 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' . func_body '}'
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 3
    KW_IF       shift, and go to state 4
    KW_WHILE    shift, and go to state 5
    KW_LET      shift, and go to state 160
    KW_RETURN   shift, and go to state 8

    $default  reduce using rule 32 (func_body)

    commands     go to state 161
    func_body    go to state 162
    func_call    go to state 12
    return_expr  go to state 13


State 157

    8 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' . main_body '}'
   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   15 main_body: . commands
   16          | . commands main_body
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 3
    KW_IF       shift, and go to state 4
    KW_WHILE    shift, and go to state 5
    KW_RETURN   shift, and go to state 8

    commands     go to state 163
    main_body    go to state 164
    func_call    go to state 12
    return_expr  go to state 13


State 158

   41 func_par_decl: . %empty  [')']
   42              | . IDENTIFIER
   43              | . IDENTIFIER '[' ']'
   44              | . IDENTIFIER '[' ']' ':' type func_par_decl
   45              | . IDENTIFIER ':' type func_par_decl
   46              | . IDENTIFIER ',' func_par_decl
   47              | . IDENTIFIER '[' ']' ',' func_par_decl
   48              | . IDENTIFIER '[' ']' ':' type ',' func_par_decl
   48              | IDENTIFIER '[' ']' ':' type ',' . func_par_decl
   49              | . IDENTIFIER ':' type ',' func_par_decl

    IDENTIFIER  shift, and go to state 129

    $default  reduce using rule 41 (func_par_decl)

    func_par_decl  go to state 165


State 159

   44 func_par_decl: IDENTIFIER '[' ']' ':' type func_par_decl .

    $default  reduce using rule 44 (func_par_decl)


State 160

   33 func_body: KW_LET . decl ';' func_body
   60 decl: . %empty  [';']
   61     | . ',' decl
   62     | . IDENTIFIER decl
   63     | . IDENTIFIER ARRAY decl
   64     | . IDENTIFIER ARRAY ASSIGN data decl
   65     | . IDENTIFIER ASSIGN data decl
   66     | . ':' type

    IDENTIFIER  shift, and go to state 38
    ':'         shift, and go to state 39
    ','         shift, and go to state 40

    $default  reduce using rule 60 (decl)

    decl  go to state 166


State 161

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   32 func_body: . %empty  ['}']
   33          | . KW_LET decl ';' func_body
   34          | . commands func_body
   34          | commands . func_body
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 3
    KW_IF       shift, and go to state 4
    KW_WHILE    shift, and go to state 5
    KW_LET      shift, and go to state 160
    KW_RETURN   shift, and go to state 8

    $default  reduce using rule 32 (func_body)

    commands     go to state 161
    func_body    go to state 167
    func_call    go to state 12
    return_expr  go to state 13


State 162

   35 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body . '}'

    '}'  shift, and go to state 168


State 163

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   15 main_body: . commands
   15          | commands .  ['}']
   16          | . commands main_body
   16          | commands . main_body
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 3
    KW_IF       shift, and go to state 4
    KW_WHILE    shift, and go to state 5
    KW_RETURN   shift, and go to state 8

    $default  reduce using rule 15 (main_body)

    commands     go to state 163
    main_body    go to state 169
    func_call    go to state 12
    return_expr  go to state 13


State 164

    8 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body . '}'

    '}'  shift, and go to state 170


State 165

   48 func_par_decl: IDENTIFIER '[' ']' ':' type ',' func_par_decl .

    $default  reduce using rule 48 (func_par_decl)


State 166

   33 func_body: KW_LET decl . ';' func_body

    ';'  shift, and go to state 171


State 167

   34 func_body: commands func_body .

    $default  reduce using rule 34 (func_body)


State 168

   35 func_decl: KW_CONST IDENTIFIER ASSIGN '(' func_par_decl ')' ':' type '{' func_body '}' .

    $default  reduce using rule 35 (func_decl)


State 169

   16 main_body: commands main_body .

    $default  reduce using rule 16 (main_body)


State 170

    8 body: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT KW_MAIN_ASSIGN '{' main_body '}' .

    $default  reduce using rule 8 (body)


State 171

   10 commands: . func_call ';'
   11         | . IDENTIFIER ASSIGN expr ';'
   12         | . return_expr ';'
   13         | . KW_IF if_state KW_FI
   14         | . KW_WHILE expr KW_LOOP while_state KW_POOL
   32 func_body: . %empty  ['}']
   33          | . KW_LET decl ';' func_body
   33          | KW_LET decl ';' . func_body
   34          | . commands func_body
   36 func_call: . IDENTIFIER '(' func_param ')'
   40 return_expr: . KW_RETURN expr

    IDENTIFIER  shift, and go to state 3
    KW_IF       shift, and go to state 4
    KW_WHILE    shift, and go to state 5
    KW_LET      shift, and go to state 160
    KW_RETURN   shift, and go to state 8

    $default  reduce using rule 32 (func_body)

    commands     go to state 161
    func_body    go to state 172
    func_call    go to state 12
    return_expr  go to state 13


State 172

   33 func_body: KW_LET decl ';' func_body .

    $default  reduce using rule 33 (func_body)
